{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Shared/Form/FloatInput.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport compare from 'components/../services/math.js';\nimport './Form.css';\n\nvar FloatInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FloatInput, _Component);\n\n  function FloatInput(props) {\n    var _this;\n\n    _classCallCheck(this, FloatInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FloatInput).call(this, props));\n\n    _this.onChange = function (e) {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          propagateChange = _this$props.propagateChange,\n          lowerBound = _this$props.lowerBound,\n          upperBound = _this$props.upperBound;\n      var newValue = e.target.value.trim(); // If someone copy and pastes a lat/lng with more significant digits.\n\n      var valSplit = newValue.split('.');\n      var maxSigDigits = 15;\n\n      if (valSplit[1] && valSplit[1].length > maxSigDigits) {\n        newValue = valSplit[0] + '.' + valSplit[1].substring(0, maxSigDigits);\n      }\n\n      if (newValue === '' || newValue === '-') {\n        propagateChange({\n          value: newValue,\n          errorMessage: \"Missing \".concat(id, \" value.\")\n        });\n      } else if ( // must be number or empty string\n      // numbers can't have more than 14 digits after decimal place\n      // can't be larger than 90 or less than -90\n      isNaN(newValue) && newValue !== '' || newValue < -180 || newValue > 180) {\n        e.preventDefault();\n      } else {\n        if (compare(newValue, 'lt', lowerBound)) {\n          propagateChange({\n            value: newValue,\n            errorMessage: \"\".concat(id, \" must be greater than \").concat(lowerBound)\n          });\n        } else if (compare(newValue, 'gt', upperBound)) {\n          propagateChange({\n            value: newValue,\n            errorMessage: \"\".concat(id, \" must be less than \").concat(lowerBound)\n          });\n        } else {\n          propagateChange({\n            value: newValue,\n            errorMessage: null\n          });\n        }\n      }\n    };\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FloatInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          errorMessage = _this$props2.errorMessage,\n          className = _this$props2.className,\n          isDisabled = _this$props2.isDisabled;\n      return React.createElement(\"input\", {\n        style: {\n          width: \"100%\"\n        },\n        type: \"text\",\n        value: value,\n        onChange: this.onChange,\n        className: classNames('Shared__text-input', {\n          'Shared__text-input--disabled': isDisabled\n        }, {\n          'invalid_input': !!errorMessage\n        }, className),\n        disabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FloatInput;\n}(Component);\n\nexport { FloatInput as default };\nFloatInput.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.string,\n  className: PropTypes.string,\n  propagateChange: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  lowerBound: PropTypes.number,\n  upperBound: PropTypes.number\n};\nFloatInput.defaultProps = {\n  isDisabled: false\n};","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/Form/FloatInput.js"],"names":["React","Component","PropTypes","classNames","compare","FloatInput","props","onChange","e","id","propagateChange","lowerBound","upperBound","newValue","target","value","trim","valSplit","split","maxSigDigits","length","substring","errorMessage","isNaN","preventDefault","bind","className","isDisabled","width","propTypes","string","func","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport compare from 'components/../services/math.js';\nimport './Form.css';\n\nexport default class FloatInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange = (e) => {\n    const { id, propagateChange, lowerBound, upperBound } = this.props;\n    let newValue = e.target.value.trim();\n\n    // If someone copy and pastes a lat/lng with more significant digits.\n    let valSplit = newValue.split('.');\n    let maxSigDigits = 15;\n    if ((valSplit[1] && valSplit[1].length > maxSigDigits)) {\n      newValue = valSplit[0] + '.' + valSplit[1].substring(0,maxSigDigits);\n    }\n\n    if (newValue === '' || newValue === '-') {\n      propagateChange({\n        value: newValue,\n        errorMessage: `Missing ${id} value.`\n      });\n    } else if (\n      // must be number or empty string\n      // numbers can't have more than 14 digits after decimal place\n      // can't be larger than 90 or less than -90\n      (isNaN(newValue) && (newValue !== '')) ||\n      (newValue < -180) ||\n      (newValue > 180)\n    ) {\n      e.preventDefault()\n    } else {\n      if (compare(newValue, 'lt', lowerBound)) {\n        propagateChange({\n          value: newValue,\n          errorMessage: `${id} must be greater than ${lowerBound}`\n        });\n      } else if (compare(newValue, 'gt', upperBound)) {\n        propagateChange({\n          value: newValue,\n          errorMessage: `${id} must be less than ${lowerBound}`\n        });\n      } else {\n        propagateChange({\n          value: newValue,\n          errorMessage: null\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      value,\n      errorMessage,\n      className,\n      isDisabled\n    } = this.props;\n    return (\n      <input\n        style={{width: \"100%\"}}\n        type=\"text\"\n        value={value}\n        onChange={this.onChange}\n        className={classNames(\n          'Shared__text-input',\n          { 'Shared__text-input--disabled': isDisabled },\n          { 'invalid_input': !!errorMessage},\n          className,\n        )}\n        disabled={isDisabled}\n      />\n    )\n  }\n}\n\nFloatInput.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.string,\n  className: PropTypes.string,\n  propagateChange: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  lowerBound: PropTypes.number,\n  upperBound: PropTypes.number\n};\n\nFloatInput.defaultProps = {\n  isDisabled: false,\n};\n"]},"metadata":{},"sourceType":"module"}