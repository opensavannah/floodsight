{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/CommunityTag.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport CommunityRemoveModal from './CommunityRemoveModal';\nimport CloseDarkSvg from \"images/close-dark.svg\";\nimport './CommunityTag.css';\n\nvar CommunityTag =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommunityTag, _Component);\n\n  function CommunityTag() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommunityTag);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommunityTag)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(CommunityTag, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          community = _this$props.community,\n          isRemovable = _this$props.isRemovable,\n          crossing = _this$props.crossing,\n          onCommunityRemoved = _this$props.onCommunityRemoved;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"CrossingDetails__community-tag\",\n        onClick: function onClick() {\n          _this2.setState({\n            isOpen: true\n          });\n        },\n        disabled: !isRemovable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, community.name, isRemovable && React.createElement(\"img\", {\n        src: CloseDarkSvg,\n        className: \"CrossingDetails__community-tag-icon\",\n        alt: \"Remove community\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), this.state.isOpen && React.createElement(CommunityRemoveModal, {\n        crossing: crossing,\n        community: community,\n        onClose: function onClose() {\n          _this2.setState({\n            isOpen: false\n          });\n        },\n        onCommunityRemoved: onCommunityRemoved,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CommunityTag;\n}(Component);\n\nCommunityTag.propTypes = {\n  community: PropTypes.object.isRequired,\n  crossing: PropTypes.object.isRequired,\n  isRemovable: PropTypes.bool.isRequired,\n  onCommunityRemoved: PropTypes.func.isRequired\n};\nexport { CommunityTag as default };","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/CommunityTag.js"],"names":["React","Component","Fragment","PropTypes","CommunityRemoveModal","CommunityTag","args","state","isOpen","props","community","isRemovable","crossing","onCommunityRemoved","setState","name","CloseDarkSvg","propTypes","object","isRequired","bool","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAGA,OAAO,oBAAP;;IAEqBC,Y;;;;;AAQnB,0BAAqB;AAAA;;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,2IAASA,IAAT;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFmB;AAKpB;;;;6BAEQ;AAAA;;AAAA,wBAC0D,KAAKC,KAD/D;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,WADZ,eACYA,WADZ;AAAA,UACyBC,QADzB,eACyBA,QADzB;AAAA,UACmCC,kBADnC,eACmCA,kBADnC;AAEP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,gCADZ;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACC,QAAL,CAAc;AACZN,YAAAA,MAAM,EAAE;AADI,WAAd;AAGD,SANH;AAOE,QAAA,QAAQ,EAAE,CAACG,WAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGD,SAAS,CAACK,IATb,EAUGJ,WAAW,IACV;AACE,QAAA,GAAG,EAAEK,YADP;AAEE,QAAA,SAAS,EAAC,qCAFZ;AAGE,QAAA,GAAG,EAAC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CADF,EAmBG,KAAKT,KAAL,CAAWC,MAAX,IACC,oBAAC,oBAAD;AACE,QAAA,QAAQ,EAAEI,QADZ;AAEE,QAAA,SAAS,EAAEF,SAFb;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACI,QAAL,CAAc;AACZN,YAAAA,MAAM,EAAE;AADI,WAAd;AAGD,SAPH;AAQE,QAAA,kBAAkB,EAAEK,kBARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,CADF;AAkCD;;;;EAnDuCZ,S;;AAArBI,Y,CACZY,S,GAAY;AACjBP,EAAAA,SAAS,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UADX;AAEjBP,EAAAA,QAAQ,EAAET,SAAS,CAACe,MAAV,CAAiBC,UAFV;AAGjBR,EAAAA,WAAW,EAAER,SAAS,CAACiB,IAAV,CAAeD,UAHX;AAIjBN,EAAAA,kBAAkB,EAAEV,SAAS,CAACkB,IAAV,CAAeF;AAJlB,C;SADAd,Y","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CommunityRemoveModal from './CommunityRemoveModal';\n\nimport CloseDarkSvg from 'images/close-dark.svg';\nimport './CommunityTag.css';\n\nexport default class CommunityTag extends Component {\n  static propTypes = {\n    community: PropTypes.object.isRequired,\n    crossing: PropTypes.object.isRequired,\n    isRemovable: PropTypes.bool.isRequired,\n    onCommunityRemoved: PropTypes.func.isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  render() {\n    const { community, isRemovable, crossing, onCommunityRemoved } = this.props;\n    return (\n      <Fragment>\n        <button\n          className=\"CrossingDetails__community-tag\"\n          onClick={() => {\n            this.setState({\n              isOpen: true,\n            });\n          }}\n          disabled={!isRemovable}\n        >\n          {community.name}\n          {isRemovable && (\n            <img\n              src={CloseDarkSvg}\n              className=\"CrossingDetails__community-tag-icon\"\n              alt=\"Remove community\"\n            />\n          )}\n        </button>\n        {this.state.isOpen && (\n          <CommunityRemoveModal\n            crossing={crossing}\n            community={community}\n            onClose={() => {\n              this.setState({\n                isOpen: false,\n              });\n            }}\n            onCommunityRemoved={onCommunityRemoved}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}