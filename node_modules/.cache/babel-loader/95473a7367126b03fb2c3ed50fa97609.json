{"ast":null,"code":"var _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Shared/CrossingListItem/CrossingCommunityList/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './CrossingCommunityList.css';\nexport default function CrossingCommunityList(_ref) {\n  var crossing = _ref.crossing,\n      allCommunities = _ref.allCommunities,\n      onDash = _ref.onDash;\n  return React.createElement(\"div\", {\n    className: \"CrossingCommunityList\",\n    onClick: function onClick(e) {\n      // Don't fire CrossingSidebarNearbyCrossingItem onClick\n      e.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, crossing.communityIds.map(function (communityId) {\n    if (!allCommunities) {\n      return null;\n    }\n\n    var community = allCommunities.find(function (c) {\n      return c.id === communityId;\n    });\n    return community && React.createElement(Link, {\n      to: \"\".concat(onDash ? '/dashboard' : '', \"/map/community/\").concat(community.id),\n      key: community.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"CrossingCommunityList__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, community.name));\n  }));\n}","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/CrossingListItem/CrossingCommunityList/index.js"],"names":["React","Link","CrossingCommunityList","crossing","allCommunities","onDash","e","stopPropagation","communityIds","map","communityId","community","find","c","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,6BAAP;AAEA,eAAe,SAASC,qBAAT,OAAqE;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,cAA0B,QAA1BA,cAA0B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAClF,SACE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,OAAO,EAAE,iBAAAC,CAAC,EAAI;AACZ;AACAA,MAAAA,CAAC,CAACC,eAAF;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGJ,QAAQ,CAACK,YAAT,CAAsBC,GAAtB,CAA0B,UAAAC,WAAW,EAAI;AACxC,QAAI,CAACN,cAAL,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAMO,SAAS,GAAGP,cAAc,CAACQ,IAAf,CAAoB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,EAAF,KAASJ,WAAb;AAAA,KAArB,CAAlB;AACA,WACEC,SAAS,IACP,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKN,MAAM,GAAG,YAAH,GAAkB,EAA7B,4BAAiDM,SAAS,CAACG,EAA3D,CAAR;AAAyE,MAAA,GAAG,EAAEH,SAAS,CAACG,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SAAS,CAACI,IADb,CADF,CAFJ;AASD,GAdA,CAPH,CADF;AAyBD","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './CrossingCommunityList.css';\n\nexport default function CrossingCommunityList({ crossing, allCommunities, onDash }) {\n  return (\n    <div\n      className=\"CrossingCommunityList\"\n      onClick={e => {\n        // Don't fire CrossingSidebarNearbyCrossingItem onClick\n        e.stopPropagation();\n      }}\n    >\n      {crossing.communityIds.map(communityId => {\n        if (!allCommunities) {\n          return null;\n        }\n        const community = allCommunities.find(c => c.id === communityId);\n        return (\n          community && (\n            <Link to={`${onDash ? '/dashboard' : ''}/map/community/${community.id}`} key={community.id}>\n              <span className=\"CrossingCommunityList__item\">\n                {community.name}\n              </span>\n            </Link>\n          )\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}