{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nonExecutableDefinitionMessage = nonExecutableDefinitionMessage;\nexports.ExecutableDefinitions = ExecutableDefinitions;\n\nvar _error = require('../../error');\n\nvar _kinds = require('../../language/kinds');\n\nfunction nonExecutableDefinitionMessage(defName) {\n  return 'The ' + defName + ' definition is not executable.';\n}\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nfunction ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      node.definitions.forEach(function (definition) {\n        if (definition.kind !== _kinds.Kind.OPERATION_DEFINITION && definition.kind !== _kinds.Kind.FRAGMENT_DEFINITION) {\n          context.reportError(new _error.GraphQLError(nonExecutableDefinitionMessage(definition.kind === _kinds.Kind.SCHEMA_DEFINITION ? 'schema' : definition.name.value), [definition]));\n        }\n      });\n      return false;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}