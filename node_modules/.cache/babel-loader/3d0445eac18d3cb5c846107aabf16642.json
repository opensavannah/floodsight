{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingListPage/DashboardCrossingListItem/StatusToggle/StatusToggleItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar StatusToggleItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatusToggleItem, _Component);\n\n  function StatusToggleItem() {\n    _classCallCheck(this, StatusToggleItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StatusToggleItem).apply(this, arguments));\n  }\n\n  _createClass(StatusToggleItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: classNames(['StatusToggleItem', this.props.className, this.props.isActive && 'active']),\n        onClick: this.props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.isActive ? this.props.activeIconSrc : this.props.iconSrc,\n        alt: this.props.alt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StatusToggleItem;\n}(Component);\n\nStatusToggleItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  iconSrc: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\nexport { StatusToggleItem as default };","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingListPage/DashboardCrossingListItem/StatusToggle/StatusToggleItem.js"],"names":["React","Component","PropTypes","classNames","StatusToggleItem","props","className","isActive","onClick","activeIconSrc","iconSrc","alt","propTypes","func","isRequired","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;;IAEqBC,gB;;;;;;;;;;;;;6BAQV;AACP,aACE;AACE,QAAA,SAAS,EAAED,UAAU,CAAC,CACpB,kBADoB,EAEpB,KAAKE,KAAL,CAAWC,SAFS,EAGpB,KAAKD,KAAL,CAAWE,QAAX,IAAuB,QAHH,CAAD,CADvB;AAME,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AACE,QAAA,GAAG,EACD,KAAKH,KAAL,CAAWE,QAAX,GAAsB,KAAKF,KAAL,CAAWI,aAAjC,GAAiD,KAAKJ,KAAL,CAAWK,OAFhE;AAIE,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,GAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAiBD;;;;EA1B2CV,S;;AAAzBG,gB,CACZQ,S,GAAY;AACjBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,IAAV,CAAeC,UADP;AAEjBJ,EAAAA,OAAO,EAAER,SAAS,CAACa,MAAV,CAAiBD,UAFT;AAGjBH,EAAAA,GAAG,EAAET,SAAS,CAACa,MAAV,CAAiBD,UAHL;AAIjBR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,MAAV,CAAiBD;AAJX,C;SADAV,gB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nexport default class StatusToggleItem extends Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    iconSrc: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    className: PropTypes.string.isRequired,\n  };\n\n  render() {\n    return (\n      <div\n        className={classNames([\n          'StatusToggleItem',\n          this.props.className,\n          this.props.isActive && 'active',\n        ])}\n        onClick={this.props.onClick}\n      >\n        <img\n          src={\n            this.props.isActive ? this.props.activeIconSrc : this.props.iconSrc\n          }\n          alt={this.props.alt}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}