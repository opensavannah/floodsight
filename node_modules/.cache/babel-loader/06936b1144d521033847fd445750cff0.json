{"ast":null,"code":"import _toConsumableArray from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Shared/CrossingMapPage/CrossingMapSidebar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport classnames from 'classnames';\nimport geolib from 'geolib';\nimport _ from 'lodash';\nimport SelectedCrossingContainer from 'components/Shared/CrossingMapPage/SelectedCrossingContainer';\nimport CameraListItem from 'components/Public/CameraListItem/CameraListItem.js';\nimport CrossingMapSearchBar from 'components/Shared/CrossingMapPage/CrossingMapSearchBar';\nimport CrossingSidebarNearbyCrossingItem from 'components/Shared/CrossingMapPage/CrossingSidebarNearbyCrossingItem';\nimport FilterCheckbox from 'components/Shared/FilterCheckbox';\nimport InfiniteCrossingStatusHistoryPaginationContainer from 'components/Dashboard/CrossingStatusHistory/InfiniteCrossingStatusHistoryPaginationContainer';\nimport ChevronRightDarkSvg from \"images/chevron-right-dark.svg\";\nimport ChevronLeftDarkSvg from \"images/chevron-left-dark.svg\";\nimport 'components/Shared/CrossingMapPage/CrossingMapSidebar.css';\n\nvar CrossingMapSidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CrossingMapSidebar, _Component);\n\n  function CrossingMapSidebar(props) {\n    var _this;\n\n    _classCallCheck(this, CrossingMapSidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CrossingMapSidebar).call(this, props));\n\n    _this.toggleSidebar = function () {\n      _this.setState({\n        visible: !_this.state.visible\n      }, function () {\n        _this.props.triggerMapResize();\n      });\n    };\n\n    _this.toggleFilters = function () {\n      _this.setState({\n        showFilters: !_this.state.showFilters\n      });\n    };\n\n    _this.toggleSearchFocus = function (focused) {\n      _this.setState({\n        searchFocused: focused\n      });\n    };\n\n    _this.toggleNearbyHistory = function (tab) {\n      if (tab === 'nearby') {\n        _this.setState({\n          showNearby: true,\n          showHistory: false\n        });\n      }\n\n      if (tab === 'history') {\n        _this.setState({\n          showNearby: false,\n          showHistory: true\n        });\n      }\n    };\n\n    _this.getNearbyCrossings = function (center, openCrossings, closedCrossings, cautionCrossings, longtermCrossings, showOpen, showClosed, showCaution, showLongterm, selectedCrossingId) {\n      var nearbyCrossings = [];\n      if (showOpen && openCrossings) nearbyCrossings.push.apply(nearbyCrossings, _toConsumableArray(openCrossings));\n      if (showClosed && closedCrossings) nearbyCrossings.push.apply(nearbyCrossings, _toConsumableArray(closedCrossings));\n      if (showCaution && cautionCrossings) nearbyCrossings.push.apply(nearbyCrossings, _toConsumableArray(cautionCrossings));\n      if (showLongterm && longtermCrossings) nearbyCrossings.push.apply(nearbyCrossings, _toConsumableArray(longtermCrossings));\n\n      _.remove(nearbyCrossings, function (c) {\n        return c.id === selectedCrossingId;\n      });\n\n      return nearbyCrossings.length ? _.sortBy(nearbyCrossings, function (c) {\n        return geolib.getDistance(center, JSON.parse(c.geojson).coordinates);\n      }).slice(0, 20) : [];\n    };\n\n    _this.state = {\n      visible: true,\n      showFilters: true,\n      searchFocused: false,\n      showNearby: true,\n      showHistory: false,\n      nearbyCrossings: []\n    };\n    return _this;\n  }\n\n  _createClass(CrossingMapSidebar, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      // If we're unselecting a crossing, stop trying to show the history\n      if (this.props.selectedCrossingId && !nextProps.selectedCrossingId) {\n        this.setState({\n          showNearby: true,\n          showHistory: false\n        });\n      } // If we have a new map center, different crossings, or different visibility, update nearby crossings\n\n\n      if (this.props.center !== nextProps.center || this.props.showOpen !== nextProps.showOpen || this.props.showClosed !== nextProps.showClosed || this.props.showCaution !== nextProps.showCaution || this.props.showClosed !== nextProps.showClosed || this.props.openCrossings !== nextProps.openCrossings || this.props.closedCrossings !== nextProps.closedCrossings || this.props.cautionCrossings !== nextProps.cautionCrossings || this.props.longtermCrossings !== nextProps.longtermCrossings || this.props.selectedCrossingId !== nextProps.selectedCrossingId) {\n        var nearbyCrossings = this.getNearbyCrossings(nextProps.center, nextProps.openCrossings, nextProps.closedCrossings, nextProps.cautionCrossings, nextProps.longtermCrossings, nextProps.showOpen, nextProps.showClosed, nextProps.showCaution, nextProps.showLongterm, nextProps.selectedCrossingId);\n        this.setState({\n          nearbyCrossings: nearbyCrossings\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          searchFocused = _this$state.searchFocused,\n          showNearby = _this$state.showNearby,\n          showHistory = _this$state.showHistory;\n      var _this$props = this.props,\n          toggleShowOpen = _this$props.toggleShowOpen,\n          toggleShowClosed = _this$props.toggleShowClosed,\n          toggleShowCaution = _this$props.toggleShowCaution,\n          toggleShowLongterm = _this$props.toggleShowLongterm,\n          showOpen = _this$props.showOpen,\n          showClosed = _this$props.showClosed,\n          showCaution = _this$props.showCaution,\n          showLongterm = _this$props.showLongterm,\n          searchQuery = _this$props.searchQuery,\n          searchQueryUpdated = _this$props.searchQueryUpdated,\n          selectedFeature = _this$props.selectedFeature,\n          currentUser = _this$props.currentUser,\n          allCommunities = _this$props.allCommunities,\n          selectedCrossingName = _this$props.selectedCrossingName,\n          center = _this$props.center,\n          setSelectedFeature = _this$props.setSelectedFeature,\n          onDash = _this$props.onDash;\n      var selectedCrossingId, selectedCameraId;\n\n      if (selectedFeature) {\n        if (selectedFeature.type === \"Crossing\") {\n          selectedCrossingId = selectedFeature.data.id;\n        } else if (selectedFeature.type === \"Camera\") {\n          selectedCameraId = selectedFeature.data.id;\n        }\n      }\n\n      var cameraOrCrossingSelected = !!selectedCrossingId || !!selectedCameraId;\n      var nearbyCrossings = this.state.nearbyCrossings;\n      return React.createElement(\"div\", {\n        className: \"CrossingMapSidebar__overlay-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, visible && React.createElement(\"div\", {\n        className: \"CrossingMapSidebar__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames('CrossingMapSidebar__content-noscroll', {\n          'CrossingMapSidebar__content-noscroll--searchFocused': this.state.searchFocused\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(CrossingMapSearchBar, {\n        cameraOrCrossingSelected: cameraOrCrossingSelected,\n        searchQuery: searchQuery,\n        searchQueryUpdated: searchQueryUpdated,\n        selectedCrossingName: selectedCrossingName,\n        center: center,\n        setSelectedFeature: setSelectedFeature,\n        toggleSearchFocus: this.toggleSearchFocus,\n        communities: allCommunities,\n        communityId: currentUser && currentUser.role !== 'floods_super_admin' ? currentUser.communityId : null,\n        onDash: onDash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), !searchFocused && selectedCrossingId && React.createElement(SelectedCrossingContainer, {\n        crossingId: selectedCrossingId,\n        currentUser: currentUser,\n        allCommunities: allCommunities,\n        setSelectedFeature: setSelectedFeature,\n        onDash: onDash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), !searchFocused && selectedCameraId && React.createElement(CameraListItem, {\n        camera: selectedFeature.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), !searchFocused && !cameraOrCrossingSelected && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-filter-sort-toggle-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames('CrossingMapPage_sidebar-filter-toggle', {\n          selected: this.state.showFilters\n        }),\n        onClick: this.toggleFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-filter-toggle-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.showFilters ? React.createElement(\"span\", {\n        className: \"CrossingMapPage_sidebar-filter-toggle-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(FontAwesome, {\n        name: \"minus\",\n        ariaLabel: \"Hide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        className: \"CrossingMapPage_sidebar-filter-toggle-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(FontAwesome, {\n        name: \"plus\",\n        ariaLabel: \"Show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), ' ', \"Filter\")), React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-sort-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Last Updated\", React.createElement(\"span\", {\n        className: \"CrossingMapPage_sidebar-sort-toggle-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(FontAwesome, {\n        name: \"chevron-down\",\n        ariaLabel: \"Sort\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })))), this.state.showFilters && React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-filter-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(FilterCheckbox, {\n        isChecked: showOpen,\n        onClick: toggleShowOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Open\"), React.createElement(FilterCheckbox, {\n        isChecked: showClosed,\n        onClick: toggleShowClosed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Closed\"), React.createElement(FilterCheckbox, {\n        isChecked: showCaution,\n        onClick: toggleShowCaution,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Caution\"), React.createElement(FilterCheckbox, {\n        isChecked: showLongterm,\n        onClick: toggleShowLongterm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Long-Term Closure\"))), !searchFocused && cameraOrCrossingSelected && React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-nearby-history-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames('CrossingMapPage_sidebar-nearby-tab', {\n          selected: this.state.showNearby\n        }),\n        onClick: function onClick() {\n          return _this2.toggleNearbyHistory('nearby');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(FontAwesome, {\n        name: \"map-marker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), \" Nearby\"), selectedCrossingId && React.createElement(\"div\", {\n        className: classnames('CrossingMapPage_sidebar-history-tab', {\n          selected: this.state.showHistory\n        }),\n        onClick: function onClick() {\n          return _this2.toggleNearbyHistory('history');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(FontAwesome, {\n        name: \"history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), \" History\"))), !searchFocused && React.createElement(\"div\", {\n        className: \"CrossingMapSidebar__content-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, showNearby && React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-nearbycrossings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, nearbyCrossings.map(function (c) {\n        return React.createElement(CrossingSidebarNearbyCrossingItem, {\n          key: c.id,\n          latestStatus: c.latestStatusCreatedAt,\n          statusId: c.latestStatusId,\n          crossing: c,\n          crossingId: c.id,\n          crossingName: c.name,\n          communityIds: c.communityIds,\n          allCommunities: allCommunities,\n          onDash: onDash,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        });\n      })), showHistory && React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-crossing-status-history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(InfiniteCrossingStatusHistoryPaginationContainer, {\n        crossingId: selectedCrossingId,\n        showNames: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-toggle-container\",\n        onClick: this.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingMapPage_sidebar-toggle\",\n        role: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: visible ? 'Collapse Sidebar' : 'Expand Sidebar',\n        src: visible ? ChevronLeftDarkSvg : ChevronRightDarkSvg,\n        onClick: this.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CrossingMapSidebar;\n}(Component);\n\nCrossingMapSidebar.propTypes = {\n  triggerMapResize: PropTypes.func.isRequired\n};\nexport default CrossingMapSidebar;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/CrossingMapPage/CrossingMapSidebar.js"],"names":["React","Component","PropTypes","FontAwesome","classnames","geolib","_","SelectedCrossingContainer","CameraListItem","CrossingMapSearchBar","CrossingSidebarNearbyCrossingItem","FilterCheckbox","InfiniteCrossingStatusHistoryPaginationContainer","CrossingMapSidebar","props","toggleSidebar","setState","visible","state","triggerMapResize","toggleFilters","showFilters","toggleSearchFocus","focused","searchFocused","toggleNearbyHistory","tab","showNearby","showHistory","getNearbyCrossings","center","openCrossings","closedCrossings","cautionCrossings","longtermCrossings","showOpen","showClosed","showCaution","showLongterm","selectedCrossingId","nearbyCrossings","push","remove","c","id","length","sortBy","getDistance","JSON","parse","geojson","coordinates","slice","nextProps","toggleShowOpen","toggleShowClosed","toggleShowCaution","toggleShowLongterm","searchQuery","searchQueryUpdated","selectedFeature","currentUser","allCommunities","selectedCrossingName","setSelectedFeature","onDash","selectedCameraId","type","data","cameraOrCrossingSelected","role","communityId","selected","map","latestStatusCreatedAt","latestStatusId","name","communityIds","ChevronLeftDarkSvg","ChevronRightDarkSvg","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport classnames from 'classnames';\nimport geolib from 'geolib';\nimport _ from 'lodash';\n\nimport SelectedCrossingContainer from 'components/Shared/CrossingMapPage/SelectedCrossingContainer';\nimport CameraListItem from 'components/Public/CameraListItem/CameraListItem.js';\nimport CrossingMapSearchBar from 'components/Shared/CrossingMapPage/CrossingMapSearchBar';\nimport CrossingSidebarNearbyCrossingItem from 'components/Shared/CrossingMapPage/CrossingSidebarNearbyCrossingItem';\nimport FilterCheckbox from 'components/Shared/FilterCheckbox';\nimport InfiniteCrossingStatusHistoryPaginationContainer from 'components/Dashboard/CrossingStatusHistory/InfiniteCrossingStatusHistoryPaginationContainer';\nimport ChevronRightDarkSvg from 'images/chevron-right-dark.svg';\nimport ChevronLeftDarkSvg from 'images/chevron-left-dark.svg';\n\nimport 'components/Shared/CrossingMapPage/CrossingMapSidebar.css';\n\nclass CrossingMapSidebar extends Component {\n  static propTypes = {\n    triggerMapResize: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true,\n      showFilters: true,\n      searchFocused: false,\n      showNearby: true,\n      showHistory: false,\n      nearbyCrossings: [],\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // If we're unselecting a crossing, stop trying to show the history\n    if (this.props.selectedCrossingId && !nextProps.selectedCrossingId) {\n      this.setState({\n        showNearby: true,\n        showHistory: false,\n      });\n    }\n\n    // If we have a new map center, different crossings, or different visibility, update nearby crossings\n    if (\n      this.props.center !== nextProps.center ||\n      this.props.showOpen !== nextProps.showOpen ||\n      this.props.showClosed !== nextProps.showClosed ||\n      this.props.showCaution !== nextProps.showCaution ||\n      this.props.showClosed !== nextProps.showClosed ||\n      this.props.openCrossings !== nextProps.openCrossings ||\n      this.props.closedCrossings !== nextProps.closedCrossings ||\n      this.props.cautionCrossings !== nextProps.cautionCrossings ||\n      this.props.longtermCrossings !== nextProps.longtermCrossings ||\n      this.props.selectedCrossingId !== nextProps.selectedCrossingId\n    ) {\n      const nearbyCrossings = this.getNearbyCrossings(\n        nextProps.center,\n        nextProps.openCrossings,\n        nextProps.closedCrossings,\n        nextProps.cautionCrossings,\n        nextProps.longtermCrossings,\n        nextProps.showOpen,\n        nextProps.showClosed,\n        nextProps.showCaution,\n        nextProps.showLongterm,\n        nextProps.selectedCrossingId,\n      );\n      this.setState({ nearbyCrossings: nearbyCrossings });\n    }\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible }, () => {\n      this.props.triggerMapResize();\n    });\n  };\n\n  toggleFilters = () => {\n    this.setState({ showFilters: !this.state.showFilters });\n  };\n\n  toggleSearchFocus = focused => {\n    this.setState({ searchFocused: focused });\n  };\n\n  toggleNearbyHistory = tab => {\n    if (tab === 'nearby') {\n      this.setState({\n        showNearby: true,\n        showHistory: false,\n      });\n    }\n\n    if (tab === 'history') {\n      this.setState({\n        showNearby: false,\n        showHistory: true,\n      });\n    }\n  };\n\n  getNearbyCrossings = (\n    center,\n    openCrossings,\n    closedCrossings,\n    cautionCrossings,\n    longtermCrossings,\n    showOpen,\n    showClosed,\n    showCaution,\n    showLongterm,\n    selectedCrossingId,\n  ) => {\n    let nearbyCrossings = [];\n\n    if (showOpen && openCrossings) nearbyCrossings.push(...openCrossings);\n    if (showClosed && closedCrossings) nearbyCrossings.push(...closedCrossings);\n    if (showCaution && cautionCrossings)\n      nearbyCrossings.push(...cautionCrossings);\n    if (showLongterm && longtermCrossings)\n      nearbyCrossings.push(...longtermCrossings);\n\n    _.remove(nearbyCrossings, c => c.id === selectedCrossingId);\n\n    return nearbyCrossings.length\n      ? _.sortBy(nearbyCrossings, c =>\n          geolib.getDistance(center, JSON.parse(c.geojson).coordinates),\n        ).slice(0, 20)\n      : [];\n  };\n\n  render() {\n    const { visible, searchFocused, showNearby, showHistory } = this.state;\n    const {\n      toggleShowOpen,\n      toggleShowClosed,\n      toggleShowCaution,\n      toggleShowLongterm,\n      showOpen,\n      showClosed,\n      showCaution,\n      showLongterm,\n      searchQuery,\n      searchQueryUpdated,\n      selectedFeature,\n      currentUser,\n      allCommunities,\n      selectedCrossingName,\n      center,\n      setSelectedFeature,\n      onDash\n    } = this.props;\n\n    let selectedCrossingId, selectedCameraId;\n    if (selectedFeature) {\n      if (selectedFeature.type === \"Crossing\") {\n        selectedCrossingId = selectedFeature.data.id;\n      } else if (selectedFeature.type === \"Camera\") {\n        selectedCameraId = selectedFeature.data.id;\n      }\n    }\n    const cameraOrCrossingSelected = !!selectedCrossingId || !!selectedCameraId;\n\n    const { nearbyCrossings } = this.state;\n\n    return (\n      <div className=\"CrossingMapSidebar__overlay-container\">\n        {visible && (\n          <div className=\"CrossingMapSidebar__content\">\n            <div\n              className={classnames('CrossingMapSidebar__content-noscroll', {\n                'CrossingMapSidebar__content-noscroll--searchFocused': this\n                  .state.searchFocused,\n              })}\n            >\n              <CrossingMapSearchBar\n                cameraOrCrossingSelected={cameraOrCrossingSelected}\n                searchQuery={searchQuery}\n                searchQueryUpdated={searchQueryUpdated}\n                selectedCrossingName={selectedCrossingName}\n                center={center}\n                setSelectedFeature={setSelectedFeature}\n                toggleSearchFocus={this.toggleSearchFocus}\n                communities={allCommunities}\n                communityId={\n                  currentUser && currentUser.role !== 'floods_super_admin'\n                    ? currentUser.communityId\n                    : null\n                }\n                onDash={onDash}\n              />\n              {!searchFocused &&\n                selectedCrossingId && (\n                  <SelectedCrossingContainer\n                    crossingId={selectedCrossingId}\n                    currentUser={currentUser}\n                    allCommunities={allCommunities}\n                    setSelectedFeature={setSelectedFeature}\n                    onDash={onDash}\n                  />\n                )\n              }\n              {!searchFocused &&\n                selectedCameraId && (\n                  <CameraListItem\n                    camera={selectedFeature.data}\n                  />\n                )\n              }\n              {!searchFocused &&\n                !cameraOrCrossingSelected && (\n                  <div>\n                    <div className=\"CrossingMapPage_sidebar-filter-sort-toggle-container\">\n                      <div\n                        className={classnames(\n                          'CrossingMapPage_sidebar-filter-toggle',\n                          {\n                            selected: this.state.showFilters,\n                          },\n                        )}\n                        onClick={this.toggleFilters}\n                      >\n                        <div className=\"CrossingMapPage_sidebar-filter-toggle-text\">\n                          {this.state.showFilters ? (\n                            <span className=\"CrossingMapPage_sidebar-filter-toggle-icon\">\n                              <FontAwesome name=\"minus\" ariaLabel=\"Hide\" />\n                            </span>\n                          ) : (\n                            <span className=\"CrossingMapPage_sidebar-filter-toggle-icon\">\n                              <FontAwesome name=\"plus\" ariaLabel=\"Show\" />\n                            </span>\n                          )}{' '}\n                          Filter\n                        </div>\n                      </div>\n                      <div className=\"CrossingMapPage_sidebar-sort-toggle\">\n                        Last Updated\n                        <span className=\"CrossingMapPage_sidebar-sort-toggle-icon\">\n                          <FontAwesome name=\"chevron-down\" ariaLabel=\"Sort\" />\n                        </span>\n                      </div>\n                    </div>\n                    {this.state.showFilters && (\n                      <div className=\"CrossingMapPage_sidebar-filter-container\">\n                        <FilterCheckbox\n                          isChecked={showOpen}\n                          onClick={toggleShowOpen}\n                        >\n                          Open\n                        </FilterCheckbox>\n                        <FilterCheckbox\n                          isChecked={showClosed}\n                          onClick={toggleShowClosed}\n                        >\n                          Closed\n                        </FilterCheckbox>\n                        <FilterCheckbox\n                          isChecked={showCaution}\n                          onClick={toggleShowCaution}\n                        >\n                          Caution\n                        </FilterCheckbox>\n                        <FilterCheckbox\n                          isChecked={showLongterm}\n                          onClick={toggleShowLongterm}\n                        >\n                          Long-Term Closure\n                        </FilterCheckbox>\n                      </div>\n                    )}\n                  </div>\n                )}\n              {!searchFocused &&\n                cameraOrCrossingSelected && (\n                  <div className=\"CrossingMapPage_sidebar-nearby-history-toggle\">\n                    <div\n                      className={classnames(\n                        'CrossingMapPage_sidebar-nearby-tab',\n                        {\n                          selected: this.state.showNearby,\n                        },\n                      )}\n                      onClick={() => this.toggleNearbyHistory('nearby')}\n                    >\n                      <FontAwesome name=\"map-marker\" /> Nearby\n                    </div>\n                    {selectedCrossingId && (\n                      <div\n                        className={classnames(\n                          'CrossingMapPage_sidebar-history-tab',\n                          {\n                            selected: this.state.showHistory,\n                          },\n                        )}\n                        onClick={() => this.toggleNearbyHistory('history')}\n                      >\n                        <FontAwesome name=\"history\" /> History\n                      </div>\n                    )}\n                  </div>\n                )}\n            </div>\n            {!searchFocused && (\n              <div className=\"CrossingMapSidebar__content-scroll\">\n                {showNearby && (\n                  <div className=\"CrossingMapPage_sidebar-nearbycrossings\">\n                    {nearbyCrossings.map(c => (\n                      <CrossingSidebarNearbyCrossingItem\n                        key={c.id}\n                        latestStatus={c.latestStatusCreatedAt}\n                        statusId={c.latestStatusId}\n                        crossing={c}\n                        crossingId={c.id}\n                        crossingName={c.name}\n                        communityIds={c.communityIds}\n                        allCommunities={allCommunities}\n                        onDash={onDash}\n                      />\n                    ))}\n                  </div>\n                )}\n                {showHistory && (\n                  <div className=\"CrossingMapPage_sidebar-crossing-status-history\">\n                    <InfiniteCrossingStatusHistoryPaginationContainer\n                      crossingId={selectedCrossingId}\n                      showNames={false}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        <div\n          className=\"CrossingMapPage_sidebar-toggle-container\"\n          onClick={this.toggleSidebar}\n        >\n          <div className=\"CrossingMapPage_sidebar-toggle\" role=\"button\">\n            <img\n              alt={visible ? 'Collapse Sidebar' : 'Expand Sidebar'}\n              src={visible ? ChevronLeftDarkSvg : ChevronRightDarkSvg}\n              onClick={this.toggleSidebar}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CrossingMapSidebar;\n"]},"metadata":{},"sourceType":"module"}