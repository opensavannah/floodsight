{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingListPage/DashboardCrossingListItem/DurationSelection.js\";\nimport React, { Component } from 'react';\nimport 'components/Dashboard/CrossingListPage/DashboardCrossingListItem/DurationSelection.css';\nimport DatePicker from 'components/Shared/DatePicker';\n/**\n  Passes an estimated reopenDate via the \"onChange\" prop.\n  Unless the \"Closed Indefinitely\" checkbox is ticked, then the crossing will not have an estimated reopenDate.\n**/\n\nvar DurationSelection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DurationSelection, _Component);\n\n  function DurationSelection() {\n    _classCallCheck(this, DurationSelection);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DurationSelection).apply(this, arguments));\n  }\n\n  _createClass(DurationSelection, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          reopenDate = _this$props.reopenDate,\n          indefiniteClosure = _this$props.indefiniteClosure;\n      return React.createElement(\"div\", {\n        className: \"duration-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"duration-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Estimated Reopen Date:\"), React.createElement(\"td\", {\n        className: \"table-spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        date: reopenDate,\n        checkForExpiration: true,\n        onChange: function onChange(newReopenDate) {\n          _this.props.onChange({\n            indefiniteClosure: false,\n            reopenDate: newReopenDate\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Closed Indefinitely:\"), React.createElement(\"td\", {\n        className: \"table-spacing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: indefiniteClosure,\n        onChange: function onChange() {\n          if (indefiniteClosure) {\n            _this.props.onChange({\n              indefiniteClosure: false,\n              reopenDate: null\n            });\n          } else {\n            _this.props.onChange({\n              indefiniteClosure: true,\n              reopenDate: null\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return DurationSelection;\n}(Component);\n\nexport { DurationSelection as default };","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingListPage/DashboardCrossingListItem/DurationSelection.js"],"names":["React","Component","DatePicker","DurationSelection","props","reopenDate","indefiniteClosure","newReopenDate","onChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,uFAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA;;;;;IAIqBC,iB;;;;;;;;;;;;;6BACV;AAAA;;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,iBADb,eACaA,iBADb;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAIE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAED,UADR;AAEE,QAAA,kBAAkB,EAAE,IAFtB;AAGE,QAAA,QAAQ,EAAE,kBAAAE,aAAa,EAAI;AACzB,UAAA,KAAI,CAACH,KAAL,CAAWI,QAAX,CAAoB;AAClBF,YAAAA,iBAAiB,EAAE,KADD;AAElBD,YAAAA,UAAU,EAAEE;AAFM,WAApB;AAID,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAIE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAED,iBAFX;AAGE,QAAA,QAAQ,EAAE,oBAAM;AACd,cAAIA,iBAAJ,EAAuB;AACrB,YAAA,KAAI,CAACF,KAAL,CAAWI,QAAX,CAAoB;AAClBF,cAAAA,iBAAiB,EAAE,KADD;AAElBD,cAAAA,UAAU,EAAE;AAFM,aAApB;AAID,WALD,MAKO;AACL,YAAA,KAAI,CAACD,KAAL,CAAWI,QAAX,CAAoB;AAClBF,cAAAA,iBAAiB,EAAE,IADD;AAElBD,cAAAA,UAAU,EAAE;AAFM,aAApB;AAID;AACF,SAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CApBF,CADF,CADF,CADF;AAqDD;;;;EAzD4CJ,S;;SAA1BE,iB","sourcesContent":["import React, { Component } from 'react';\n\nimport 'components/Dashboard/CrossingListPage/DashboardCrossingListItem/DurationSelection.css';\nimport DatePicker from 'components/Shared/DatePicker';\n/**\n  Passes an estimated reopenDate via the \"onChange\" prop.\n  Unless the \"Closed Indefinitely\" checkbox is ticked, then the crossing will not have an estimated reopenDate.\n**/\nexport default class DurationSelection extends Component {\n  render() {\n    const { reopenDate, indefiniteClosure } = this.props;\n\n    return (\n      <div className=\"duration-container\">\n        <table className='duration-table'>\n          <tbody>\n            <tr>\n              <td>\n                Estimated Reopen Date:\n              </td>\n              <td className='table-spacing'>\n              </td>\n              <td>\n                <DatePicker\n                  date={reopenDate}\n                  checkForExpiration={true}\n                  onChange={newReopenDate => {\n                    this.props.onChange({\n                      indefiniteClosure: false,\n                      reopenDate: newReopenDate\n                    });\n                  }}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                Closed Indefinitely:\n              </td>\n              <td className='table-spacing'>\n              </td>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={indefiniteClosure}\n                  onChange={() => {\n                    if (indefiniteClosure) {\n                      this.props.onChange({\n                        indefiniteClosure: false,\n                        reopenDate: null,\n                      });\n                    } else {\n                      this.props.onChange({\n                        indefiniteClosure: true,\n                        reopenDate: null\n                      });\n                    }\n                  }}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}