{"ast":null,"code":"import _objectSpread from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ContainerQuery } from 'react-container-query';\nimport FontAwesome from 'react-fontawesome';\nimport moment from 'moment';\nimport { dateToString } from 'components/../services/dateHelpers';\nimport { ALL_COMMUNITIES_INDEX } from 'constants/AppConstants';\nimport auth from 'services/gqlAuth';\nimport PlusMinusIcon from 'components/Shared/Icons/PlusMinusIcon';\nimport CrossingStatusHistoryFilter from 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistoryFilter';\nimport InfiniteCrossingStatusHistoryPaginationContainer from 'components/Dashboard/CrossingStatusHistory/InfiniteCrossingStatusHistoryPaginationContainer';\nimport CrossingStatusHistorySpreadsheetLink from 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistorySpreadsheetLink';\nimport { LARGE_ITEM_MIN_WIDTH } from 'constants/containerQueryConstants';\nimport 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.css';\nvar containerQuery = {\n  'CrossingStatusHistory--lg': {\n    minWidth: LARGE_ITEM_MIN_WIDTH\n  }\n};\n\nvar CrossingStatusHistory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CrossingStatusHistory, _Component);\n\n  function CrossingStatusHistory(props) {\n    var _this;\n\n    _classCallCheck(this, CrossingStatusHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CrossingStatusHistory).call(this, props));\n\n    _this.setReceivedAllStatusUpdates = function () {\n      _this.setState({\n        receivedAllStatusUpdates: true\n      });\n    };\n\n    _this.toggleFilterDropdown = function () {\n      _this.setState(function (prevState) {\n        return {\n          showFilter: !prevState.showFilter\n        };\n      });\n    };\n\n    _this.applyFilter = function (values) {\n      _this.setState(_objectSpread({}, values, {\n        showFilter: false,\n        receivedAllStatusUpdates: false\n      }));\n    };\n\n    var communityId = null;\n\n    if (props.currentUser) {\n      if (auth.roleAuthorized(['floods_super_admin'])) {\n        communityId = ALL_COMMUNITIES_INDEX;\n      } else {\n        communityId = props.currentUser.communityId;\n      }\n    }\n\n    _this.state = {\n      showFilter: false,\n      communityId: communityId,\n      dateLowerBound: null,\n      dateUpperBound: null,\n      inclusiveEndDate: false,\n      receivedAllStatusUpdates: false // Bool, Have all statusUpdates for a filter been fetched from db?\n\n    };\n    return _this;\n  }\n\n  _createClass(CrossingStatusHistory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          communityId = _this$state.communityId,\n          dateLowerBound = _this$state.dateLowerBound,\n          dateUpperBound = _this$state.dateUpperBound,\n          inclusiveEndDate = _this$state.inclusiveEndDate,\n          receivedAllStatusUpdates = _this$state.receivedAllStatusUpdates;\n      var _this$props = this.props,\n          showNames = _this$props.showNames,\n          crossingId = _this$props.crossingId,\n          maxRows = _this$props.maxRows;\n      var canSelectCommunity = auth.roleAuthorized(['floods_super_admin']); // set communityId query variable to \"null\" if user selected \"All Communities\" in filter\n\n      var queryCommunityId = communityId === ALL_COMMUNITIES_INDEX ? null : communityId;\n      var queryDateUpperBound;\n\n      if (dateUpperBound) {\n        if (inclusiveEndDate) {\n          queryDateUpperBound = dateToString(moment(dateUpperBound).add(1, 'd'));\n        } else {\n          queryDateUpperBound = dateUpperBound;\n        }\n      } else {\n        queryDateUpperBound = null;\n      }\n\n      return React.createElement(ContainerQuery, {\n        query: containerQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, function (params) {\n        return React.createElement(\"div\", {\n          className: classnames(params, 'CrossingStatusHistory'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CrossingStatusHistory__section-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CrossingStatusHistory__section-header--title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CrossingStatusHistory__section-header--history-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(FontAwesome, {\n          size: \"lg\",\n          name: \"history\",\n          ariaLabel: \"Crossing History\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })), \"Crossing History\"), React.createElement(\"div\", {\n          className: \"CrossingStatusHistoryFilterToggle\",\n          onClick: _this2.toggleFilterDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Filter\", React.createElement(PlusMinusIcon, {\n          isEnabled: _this2.state.showFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })), React.createElement(CrossingStatusHistorySpreadsheetLink, {\n          crossingId: crossingId,\n          communityId: queryCommunityId,\n          dateLowerBound: dateLowerBound,\n          dateUpperBound: queryDateUpperBound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: classnames('CrossingStatusHistory__section-header-filter', {\n            'invisible': !_this2.state.showFilter\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CrossingListSpacer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(CrossingStatusHistoryFilter, {\n          canSelectCommunity: canSelectCommunity,\n          crossingId: crossingId,\n          communityId: communityId,\n          dateLowerBound: dateLowerBound,\n          dateUpperBound: dateUpperBound,\n          inclusiveEndDate: inclusiveEndDate,\n          applyFilter: _this2.applyFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"CrossingListSpacer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        })), React.createElement(InfiniteCrossingStatusHistoryPaginationContainer, {\n          communityId: queryCommunityId,\n          crossingId: crossingId,\n          dateLowerBound: dateLowerBound,\n          dateUpperBound: queryDateUpperBound,\n          showNames: showNames,\n          maxRows: maxRows,\n          receivedAllStatusUpdates: receivedAllStatusUpdates,\n          setReceivedAllStatusUpdates: _this2.setReceivedAllStatusUpdates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return CrossingStatusHistory;\n}(Component);\n\nCrossingStatusHistory.propTypes = {\n  showNames: PropTypes.bool,\n  crossingId: PropTypes.number\n};\nCrossingStatusHistory.defaultProps = {\n  showNames: false\n};\nexport default CrossingStatusHistory;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.js"],"names":["React","Component","PropTypes","classnames","ContainerQuery","FontAwesome","moment","dateToString","ALL_COMMUNITIES_INDEX","auth","PlusMinusIcon","CrossingStatusHistoryFilter","InfiniteCrossingStatusHistoryPaginationContainer","CrossingStatusHistorySpreadsheetLink","LARGE_ITEM_MIN_WIDTH","containerQuery","minWidth","CrossingStatusHistory","props","setReceivedAllStatusUpdates","setState","receivedAllStatusUpdates","toggleFilterDropdown","prevState","showFilter","applyFilter","values","communityId","currentUser","roleAuthorized","state","dateLowerBound","dateUpperBound","inclusiveEndDate","showNames","crossingId","maxRows","canSelectCommunity","queryCommunityId","queryDateUpperBound","add","params","propTypes","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { ContainerQuery } from 'react-container-query';\nimport FontAwesome from 'react-fontawesome';\nimport moment from 'moment';\n\nimport { dateToString } from 'components/../services/dateHelpers';\nimport { ALL_COMMUNITIES_INDEX } from 'constants/AppConstants';\nimport auth from 'services/gqlAuth';\nimport PlusMinusIcon from 'components/Shared/Icons/PlusMinusIcon';\nimport CrossingStatusHistoryFilter from 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistoryFilter';\nimport InfiniteCrossingStatusHistoryPaginationContainer from 'components/Dashboard/CrossingStatusHistory/InfiniteCrossingStatusHistoryPaginationContainer';\nimport CrossingStatusHistorySpreadsheetLink from 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistorySpreadsheetLink';\nimport { LARGE_ITEM_MIN_WIDTH } from 'constants/containerQueryConstants';\n\nimport 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.css';\n\nconst containerQuery = {\n  'CrossingStatusHistory--lg': {\n    minWidth: LARGE_ITEM_MIN_WIDTH,\n  },\n};\n\nclass CrossingStatusHistory extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let communityId = null;\n    if (props.currentUser) {\n      if (auth.roleAuthorized(['floods_super_admin'])) {\n        communityId = ALL_COMMUNITIES_INDEX;\n      } else {\n        communityId = props.currentUser.communityId;\n      }\n    }\n\n    this.state = {\n      showFilter: false,\n      communityId,\n      dateLowerBound: null,\n      dateUpperBound: null,\n      inclusiveEndDate: false,\n      receivedAllStatusUpdates: false // Bool, Have all statusUpdates for a filter been fetched from db?\n    }\n  }\n\n  setReceivedAllStatusUpdates = () => {\n    this.setState({receivedAllStatusUpdates: true});\n  }\n\n  toggleFilterDropdown = () => {\n    this.setState((prevState) => ({\n      showFilter: !prevState.showFilter\n    }))\n  }\n\n  applyFilter = (values) => {\n    this.setState({\n      ...values,\n      showFilter: false,\n      receivedAllStatusUpdates: false,\n    });\n  }\n\n  static propTypes = {\n    showNames: PropTypes.bool,\n    crossingId: PropTypes.number,\n  };\n\n  static defaultProps = {\n    showNames: false,\n  };\n\n  render() {\n    const {\n      communityId,\n      dateLowerBound,\n      dateUpperBound,\n      inclusiveEndDate,\n      receivedAllStatusUpdates,\n    } = this.state;\n    const { showNames, crossingId, maxRows } = this.props;\n    const canSelectCommunity = auth.roleAuthorized(['floods_super_admin']);\n\n    // set communityId query variable to \"null\" if user selected \"All Communities\" in filter\n    const queryCommunityId = (communityId === ALL_COMMUNITIES_INDEX) ? null : communityId;\n\n    let queryDateUpperBound;\n    if (dateUpperBound) {\n      if (inclusiveEndDate) {\n        queryDateUpperBound = dateToString(moment(dateUpperBound).add(1,'d'));\n      } else {\n        queryDateUpperBound = dateUpperBound;\n      }\n    } else {\n      queryDateUpperBound = null;\n    }\n\n    return (\n      <ContainerQuery query={containerQuery}>\n        {params => (\n          <div className={classnames(params, 'CrossingStatusHistory')}>\n            <div className=\"CrossingStatusHistory__section-header\">\n              <div className=\"CrossingStatusHistory__section-header--title\">\n                <div className=\"CrossingStatusHistory__section-header--history-icon\">\n                  <FontAwesome\n                    size=\"lg\"\n                    name=\"history\"\n                    ariaLabel=\"Crossing History\"\n                  />\n                </div>\n                Crossing History\n              </div>\n              <div\n                className=\"CrossingStatusHistoryFilterToggle\"\n                onClick={this.toggleFilterDropdown}\n              >\n                Filter\n                <PlusMinusIcon isEnabled={this.state.showFilter} />\n              </div>\n              <CrossingStatusHistorySpreadsheetLink\n                crossingId={crossingId}\n                communityId={queryCommunityId}\n                dateLowerBound={dateLowerBound}\n                dateUpperBound={queryDateUpperBound}\n              />\n            </div>\n            <div className={classnames('CrossingStatusHistory__section-header-filter', {\n              'invisible': !this.state.showFilter,\n            })}>\n              <div className=\"CrossingListSpacer\" />\n              <CrossingStatusHistoryFilter\n                canSelectCommunity={canSelectCommunity}\n                crossingId={crossingId}\n                communityId={communityId}\n                dateLowerBound={dateLowerBound}\n                dateUpperBound={dateUpperBound}\n                inclusiveEndDate={inclusiveEndDate}\n                applyFilter={this.applyFilter}\n              />\n              <div className=\"CrossingListSpacer\" />\n            </div>\n            <InfiniteCrossingStatusHistoryPaginationContainer\n              communityId={queryCommunityId}\n              crossingId={crossingId}\n              dateLowerBound={dateLowerBound}\n              dateUpperBound={queryDateUpperBound}\n              showNames={showNames}\n              maxRows={maxRows}\n              receivedAllStatusUpdates={receivedAllStatusUpdates}\n              setReceivedAllStatusUpdates={this.setReceivedAllStatusUpdates}\n            />\n          </div>\n        )}\n      </ContainerQuery>\n    );\n  }\n}\n\nexport default CrossingStatusHistory;\n"]},"metadata":{},"sourceType":"module"}