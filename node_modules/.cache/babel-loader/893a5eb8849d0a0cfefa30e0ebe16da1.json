{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/LoginPage/LoginPage.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($email: String!, $password: String!) {\\n    authenticate(input: { email: $email, password: $password }) {\\n      jwtToken\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport { logError } from 'services/logger';\nimport 'scss/auth.css';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirectToReferrer: false,\n      email: '',\n      password: '',\n      errorHappened: false\n    };\n\n    _this.handleEmailChange = function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    };\n\n    _this.handlePasswordChange = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var email = _this.state.email.trim().toLowerCase();\n\n      var password = _this.state.password.trim();\n\n      _this.props.mutate({\n        variables: {\n          email: email,\n          password: password\n        }\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          errorHappened: false\n        });\n\n        localStorage.setItem('jwt_user_token', data.authenticate.jwtToken);\n\n        _this.props.onLogin();\n      }).catch(function (error) {\n        logError(error);\n\n        _this.setState({\n          errorHappened: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"AuthPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Auth__form-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Log in to the CTXfloods Dashboard \"), this.state.errorHappened && React.createElement(\"div\", {\n        className: \"Auth__error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Authentication Failed\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        value: this.state.email,\n        placeholder: \"Email\",\n        onChange: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        value: this.state.password,\n        placeholder: \"Password\",\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"Auth__submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(Link, {\n        to: \"/dashboard/forgot_password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Forgot Password?\"));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nLoginPage.propTypes = {\n  onLogin: PropTypes.func.isRequired\n};\nvar logInUser = gql(_templateObject());\nexport default graphql(logInUser)(LoginPage);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/LoginPage/LoginPage.js"],"names":["React","Component","PropTypes","graphql","gql","Link","logError","LoginPage","state","redirectToReferrer","email","password","errorHappened","handleEmailChange","e","setState","target","value","handlePasswordChange","handleSubmit","preventDefault","trim","toLowerCase","props","mutate","variables","then","data","localStorage","setItem","authenticate","jwtToken","onLogin","catch","error","propTypes","func","isRequired","logInUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\n\nimport { logError } from 'services/logger';\nimport 'scss/auth.css';\n\nclass LoginPage extends Component {\n  static propTypes = {\n    onLogin: PropTypes.func.isRequired,\n  };\n\n  state = {\n    redirectToReferrer: false,\n    email: '',\n    password: '',\n    errorHappened: false\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({ password: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    var email = this.state.email.trim().toLowerCase();\n    var password = this.state.password.trim();\n\n    this.props\n      .mutate({\n        variables: { email: email, password: password },\n      })\n      .then(({ data }) => {\n        this.setState({errorHappened: false});\n        localStorage.setItem('jwt_user_token', data.authenticate.jwtToken);\n        this.props.onLogin();\n      })\n      .catch(error => {\n        logError(error);\n        this.setState({errorHappened: true});\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"AuthPage\">\n        <div className=\"Auth__form-controls\">\n          <h1> Log in to the CTXfloods Dashboard </h1>\n          {this.state.errorHappened && (\n            <div className=\"Auth__error-text\">\n            Authentication Failed\n            </div>\n          )}\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"email\"\n              value={this.state.email}\n              placeholder=\"Email\"\n              onChange={this.handleEmailChange}\n            />\n            <input\n              type=\"password\"\n              value={this.state.password}\n              placeholder=\"Password\"\n              onChange={this.handlePasswordChange}\n            />\n            <input type=\"submit\" className=\"Auth__submit\" />\n          </form>\n        </div>\n        <Link to=\"/dashboard/forgot_password\">Forgot Password?</Link>\n      </div>\n    );\n  }\n}\n\nconst logInUser = gql`\n  mutation($email: String!, $password: String!) {\n    authenticate(input: { email: $email, password: $password }) {\n      jwtToken\n    }\n  }\n`;\n\nexport default graphql(logInUser)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}