{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/FloodsRoutes.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query currentUserQuery($skip: Boolean!) {\\n    currentUser @skip(if: $skip) {\\n      id\\n      communityId\\n      communityByCommunityId {\\n        id\\n        viewportgeojson\\n        name\\n      }\\n      role\\n      firstName\\n      lastName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport auth from 'services/gqlAuth';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PrivateRoute from 'PrivateRoute';\nimport DashboardHeader from 'components/Dashboard/DashboardHeader';\nimport PublicHeader from 'components/Public/PublicHeader';\nimport ManageUsers from 'components/Dashboard/ManageUsersPage/ManageUsers';\nimport LoginPage from 'components/Dashboard/LoginPage/LoginPage';\nimport AddUserPage from 'components/Dashboard/ManageUsersPage/AddUserPage';\nimport EditUserPage from 'components/Dashboard/ManageUsersPage/EditUserPage';\nimport CrossingMapPageContainer from 'components/Shared/CrossingMapPage/CrossingMapPageContainer';\nimport CrossingListPage from 'components/Dashboard/CrossingListPage/CrossingListPage';\nimport CrossingDetailPage from 'components/Dashboard/CrossingDetailPage/CrossingDetailPage';\nimport AddCrossingPage from 'components/Dashboard/AddCrossingPage/AddCrossingPage';\nimport CrossingStatusHistoryPage from 'components/Dashboard/CrossingStatusHistoryPage/CrossingStatusHistoryPage';\nimport ForgotPasswordPage from 'components/Dashboard/ForgotPasswordPage/ForgotPasswordPage';\nimport ResetPasswordPage from 'components/Dashboard/ResetPasswordPage/ResetPasswordPage';\nimport OpenDataPage from 'components/Shared/OpenDataPage/OpenDataPage';\nimport AboutPage from 'components/Shared/AboutPage';\nimport FloodSafetyPage from 'components/Shared/FloodSafetyPage';\nimport WhatsNew from 'components/Shared/WhatsNew';\nimport ReportIncidentPage from 'components/Shared/ReportIncidentPage';\n\nvar FloodsRoutes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FloodsRoutes, _Component);\n\n  function FloodsRoutes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FloodsRoutes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FloodsRoutes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onLogin = function () {\n      _this.props.data.refetch({\n        skip: !auth.isAuthenticated()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FloodsRoutes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentUser = this.props.data && this.props.data.currentUser;\n\n      if (this.props.data && this.props.data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"FloodsApp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render() {\n          return React.createElement(Redirect, {\n            to: \"/map\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/dashboard\",\n        exact: true,\n        render: function render() {\n          return React.createElement(Redirect, {\n            to: \"/dashboard/map\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/forgot_password\",\n        component: ForgotPasswordPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/dashboard/reset_password\",\n        render: function render(props) {\n          return React.createElement(ResetPasswordPage, Object.assign({\n            onLogin: _this2.onLogin\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/dashboard\",\n        render: function render(props) {\n          return currentUser ? React.createElement(DashboardHeader, Object.assign({\n            currentUser: currentUser\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          })) : React.createElement(LoginPage, {\n            onLogin: _this2.onLogin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: PublicHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/map/community/:selectedCommunityId\",\n        component: CrossingMapPageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/map/crossing/:selectedCrossingId\",\n        component: CrossingMapPageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/map/camera/:selectedCameraId\",\n        component: CrossingMapPageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/map\",\n        component: CrossingMapPageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/data\",\n        component: OpenDataPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/about\",\n        component: AboutPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/flood-safety\",\n        component: FloodSafetyPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/report-incident\",\n        component: ReportIncidentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard/new\",\n        component: WhatsNew,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard/map/community/:selectedCommunityId\",\n        component: CrossingMapPageContainer,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard/map/crossing/:selectedCrossingId\",\n        component: CrossingMapPageContainer,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard/map/camera/:selectedCameraId\",\n        component: CrossingMapPageContainer,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard/map\",\n        component: CrossingMapPageContainer,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        path: \"/dashboard/users\",\n        exact: true,\n        component: ManageUsers,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/users/add\",\n        component: AddUserPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/user/:id\",\n        component: EditUserPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/crossings/list\",\n        component: CrossingListPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        onDash: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/crossing/:id\",\n        component: CrossingDetailPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/crossings/add\",\n        component: AddCrossingPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/dashboard/crossings/history\",\n        component: CrossingStatusHistoryPage,\n        authenticated: auth.isAuthenticated(),\n        authorized: auth.roleAuthorized(['floods_community_editor', 'floods_community_admin', 'floods_super_admin']),\n        currentUser: currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FloodsRoutes;\n}(Component); // https://github.com/apollographql/react-apollo/issues/289#issuecomment-340718130\n// Use the `@skip` directive instead of apollo's `skip`.\n// This allows us to call refetch() in the component, so we can rerender after logging in.\n\n\nvar currentUser = gql(_templateObject());\nexport default graphql(currentUser, {\n  options: {\n    variables: {\n      skip: !auth.isAuthenticated()\n    }\n  }\n})(FloodsRoutes);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/FloodsRoutes.js"],"names":["React","Component","Route","Redirect","Switch","auth","graphql","gql","PrivateRoute","DashboardHeader","PublicHeader","ManageUsers","LoginPage","AddUserPage","EditUserPage","CrossingMapPageContainer","CrossingListPage","CrossingDetailPage","AddCrossingPage","CrossingStatusHistoryPage","ForgotPasswordPage","ResetPasswordPage","OpenDataPage","AboutPage","FloodSafetyPage","WhatsNew","ReportIncidentPage","FloodsRoutes","onLogin","props","data","refetch","skip","isAuthenticated","currentUser","loading","roleAuthorized","options","variables"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport auth from 'services/gqlAuth';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport PrivateRoute from 'PrivateRoute';\nimport DashboardHeader from 'components/Dashboard/DashboardHeader';\nimport PublicHeader from 'components/Public/PublicHeader';\n\nimport ManageUsers from 'components/Dashboard/ManageUsersPage/ManageUsers';\nimport LoginPage from 'components/Dashboard/LoginPage/LoginPage';\nimport AddUserPage from 'components/Dashboard/ManageUsersPage/AddUserPage';\nimport EditUserPage from 'components/Dashboard/ManageUsersPage/EditUserPage';\nimport CrossingMapPageContainer from 'components/Shared/CrossingMapPage/CrossingMapPageContainer'\nimport CrossingListPage from 'components/Dashboard/CrossingListPage/CrossingListPage';\nimport CrossingDetailPage from 'components/Dashboard/CrossingDetailPage/CrossingDetailPage';\nimport AddCrossingPage from 'components/Dashboard/AddCrossingPage/AddCrossingPage';\nimport CrossingStatusHistoryPage from 'components/Dashboard/CrossingStatusHistoryPage/CrossingStatusHistoryPage';\nimport ForgotPasswordPage from 'components/Dashboard/ForgotPasswordPage/ForgotPasswordPage';\nimport ResetPasswordPage from 'components/Dashboard/ResetPasswordPage/ResetPasswordPage';\nimport OpenDataPage from 'components/Shared/OpenDataPage/OpenDataPage';\nimport AboutPage from 'components/Shared/AboutPage';\nimport FloodSafetyPage from 'components/Shared/FloodSafetyPage';\nimport WhatsNew from 'components/Shared/WhatsNew';\nimport ReportIncidentPage from 'components/Shared/ReportIncidentPage';\n\nclass FloodsRoutes extends Component {\n  onLogin = () => {\n    this.props.data.refetch({\n      skip: !auth.isAuthenticated(),\n    });\n  };\n\n  render() {\n    const currentUser = this.props.data && this.props.data.currentUser;\n\n    if (this.props.data && this.props.data.loading) {\n      return <div>Loading</div>;\n    }\n\n    return (\n      <div className=\"FloodsApp\">\n        <Route path=\"/\" exact render={() => <Redirect to=\"/map\" />} />\n        <Route\n          path=\"/dashboard\"\n          exact\n          render={() => <Redirect to=\"/dashboard/map\" />}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/dashboard/forgot_password\"\n            component={ForgotPasswordPage}\n          />\n          <Route\n            path=\"/dashboard/reset_password\"\n            render={props => (\n              <ResetPasswordPage onLogin={this.onLogin} {...props} />\n            )}\n          />\n          <Route\n            path=\"/dashboard\"\n            render={props =>\n              currentUser ? (\n                <DashboardHeader currentUser={currentUser} {...props} />\n              ) : (\n                <LoginPage onLogin={this.onLogin} />\n              )\n            }\n          />\n          <Route component={PublicHeader} />\n        </Switch>\n\n        <Switch>\n          <Route\n            exact\n            path=\"/map/community/:selectedCommunityId\"\n            component={CrossingMapPageContainer}\n          />\n          <Route\n            exact\n            path=\"/map/crossing/:selectedCrossingId\"\n            component={CrossingMapPageContainer}\n          />\n          <Route\n            exact\n            path=\"/map/camera/:selectedCameraId\"\n            component={CrossingMapPageContainer}\n          />\n          <Route path=\"/map\" component={CrossingMapPageContainer} />\n        </Switch>\n\n        <Route exact path=\"/data\" component={OpenDataPage} />\n        <Route exact path=\"/about\" component={AboutPage} />\n        <Route exact path=\"/flood-safety\" component={FloodSafetyPage} />\n        <Route exact path=\"/report-incident\" component={ReportIncidentPage} />\n        <PrivateRoute\n          exact\n          path=\"/dashboard/new\"\n          component={WhatsNew}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_editor',\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n          onDash={true}\n        />\n\n        <Switch>\n          <PrivateRoute\n            exact\n            path=\"/dashboard/map/community/:selectedCommunityId\"\n            component={CrossingMapPageContainer}\n            authenticated={auth.isAuthenticated()}\n            authorized={auth.roleAuthorized([\n              'floods_community_editor',\n              'floods_community_admin',\n              'floods_super_admin',\n            ])}\n            currentUser={currentUser}\n            onDash={true}\n          />\n          <PrivateRoute\n            exact\n            path=\"/dashboard/map/crossing/:selectedCrossingId\"\n            component={CrossingMapPageContainer}\n            authenticated={auth.isAuthenticated()}\n            authorized={auth.roleAuthorized([\n              'floods_community_editor',\n              'floods_community_admin',\n              'floods_super_admin',\n            ])}\n            currentUser={currentUser}\n            onDash={true}\n          />\n          <PrivateRoute\n            exact\n            path=\"/dashboard/map/camera/:selectedCameraId\"\n            component={CrossingMapPageContainer}\n            authenticated={auth.isAuthenticated()}\n            authorized={auth.roleAuthorized([\n              'floods_community_editor',\n              'floods_community_admin',\n              'floods_super_admin',\n            ])}\n            currentUser={currentUser}\n            onDash={true}\n          />\n          <PrivateRoute\n            exact\n            path=\"/dashboard/map\"\n            component={CrossingMapPageContainer}\n            authenticated={auth.isAuthenticated()}\n            authorized={auth.roleAuthorized([\n              'floods_community_editor',\n              'floods_community_admin',\n              'floods_super_admin',\n            ])}\n            currentUser={currentUser}\n            onDash={true}\n          />\n        </Switch>\n\n        <PrivateRoute\n          path=\"/dashboard/users\"\n          exact\n          component={ManageUsers}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n        <PrivateRoute\n          path=\"/dashboard/users/add\"\n          component={AddUserPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n        <PrivateRoute\n          path=\"/dashboard/user/:id\"\n          component={EditUserPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n        <PrivateRoute\n          path=\"/dashboard/crossings/list\"\n          component={CrossingListPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_editor',\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n          onDash={true}\n        />\n        <PrivateRoute\n          path=\"/dashboard/crossing/:id\"\n          component={CrossingDetailPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_editor',\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n        <PrivateRoute\n          path=\"/dashboard/crossings/add\"\n          component={AddCrossingPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n        <PrivateRoute\n          path=\"/dashboard/crossings/history\"\n          component={CrossingStatusHistoryPage}\n          authenticated={auth.isAuthenticated()}\n          authorized={auth.roleAuthorized([\n            'floods_community_editor',\n            'floods_community_admin',\n            'floods_super_admin',\n          ])}\n          currentUser={currentUser}\n        />\n      </div>\n    );\n  }\n}\n\n// https://github.com/apollographql/react-apollo/issues/289#issuecomment-340718130\n// Use the `@skip` directive instead of apollo's `skip`.\n// This allows us to call refetch() in the component, so we can rerender after logging in.\nconst currentUser = gql`\n  query currentUserQuery($skip: Boolean!) {\n    currentUser @skip(if: $skip) {\n      id\n      communityId\n      communityByCommunityId {\n        id\n        viewportgeojson\n        name\n      }\n      role\n      firstName\n      lastName\n    }\n  }\n`;\n\nexport default graphql(currentUser, {\n  options: {\n    variables: {\n      skip: !auth.isAuthenticated(),\n    },\n  },\n})(FloodsRoutes);\n"]},"metadata":{},"sourceType":"module"}