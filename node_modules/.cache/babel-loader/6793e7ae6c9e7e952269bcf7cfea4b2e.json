{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/ForgotPasswordPage/ForgotPasswordPage.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { logError } from 'services/logger';\nimport 'scss/auth.css';\n\nvar ForgotPasswordPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPasswordPage, _Component);\n\n  function ForgotPasswordPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ForgotPasswordPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      waiting: false,\n      emailSentSuccessfully: false,\n      errorHappened: false\n    };\n\n    _this.handleEmailChange = function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      _this.setState({\n        waiting: true\n      });\n\n      e.preventDefault();\n      fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL, \"/email/reset\"), {\n        method: 'POST',\n        body: JSON.stringify({\n          email: _this.state.email,\n          newUser: false\n        }),\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        })\n      }).then(function (res) {\n        if (res.status === 204) {\n          _this.setState({\n            emailSentSuccessfully: true,\n            errorHappened: false\n          });\n        } else if (res.status === 400) {\n          _this.setState({\n            emailSentSuccessfully: false,\n            errorHappened: true\n          });\n        }\n      }).catch(function (err) {\n        logError(err);\n\n        _this.setState({\n          emailSentSuccessfully: false,\n          errorHappened: true\n        });\n      }).then(function () {\n        _this.setState({\n          waiting: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPasswordPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          emailSentSuccessfully = _this$state.emailSentSuccessfully,\n          waiting = _this$state.waiting,\n          errorHappened = _this$state.errorHappened;\n      return React.createElement(\"div\", {\n        className: \"AuthPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, !emailSentSuccessfully && !waiting && React.createElement(\"div\", {\n        className: \"Auth__form-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" Reset your password \"), errorHappened && React.createElement(\"div\", {\n        className: \"Auth__error-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, ' ', \"Failed to send password reset email\", ' '), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        value: this.state.email,\n        placeholder: \"Email\",\n        onChange: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"Auth__submit\",\n        value: \"Send Reset Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), waiting && React.createElement(FontAwesome, {\n        name: \"spinner\",\n        size: \"4x\",\n        className: \"Auth__waiting fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), emailSentSuccessfully && React.createElement(\"div\", {\n        className: \"Auth__form-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Email Sent! \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"You have 30 minutes to reset your password before your email's link expires.\")));\n    }\n  }]);\n\n  return ForgotPasswordPage;\n}(Component);\n\nexport default ForgotPasswordPage;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/ForgotPasswordPage/ForgotPasswordPage.js"],"names":["React","Component","FontAwesome","logError","ForgotPasswordPage","state","email","waiting","emailSentSuccessfully","errorHappened","handleEmailChange","e","setState","target","value","handleSubmit","preventDefault","fetch","process","env","REACT_APP_BACKEND_URL","method","body","JSON","stringify","newUser","headers","Headers","then","res","status","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport { logError } from 'services/logger';\n\nimport 'scss/auth.css';\n\nclass ForgotPasswordPage extends Component {\n  state = {\n    email: '',\n    waiting: false,\n    emailSentSuccessfully: false,\n    errorHappened: false,\n  };\n\n  handleEmailChange = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  handleSubmit = e => {\n    this.setState({ waiting: true });\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/email/reset`, {\n      method: 'POST',\n      body: JSON.stringify({ email: this.state.email, newUser: false }),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n    })\n      .then(res => {\n        if (res.status === 204) {\n          this.setState({\n            emailSentSuccessfully: true,\n            errorHappened: false,\n          });\n        } else if (res.status === 400) {\n          this.setState({\n            emailSentSuccessfully: false,\n            errorHappened: true,\n          });\n        }\n      })\n      .catch(err => {\n        logError(err);\n        this.setState({\n          emailSentSuccessfully: false,\n          errorHappened: true,\n        });\n      })\n      .then(() => {\n        this.setState({ waiting: false });\n      });\n  };\n\n  render() {\n    const { emailSentSuccessfully, waiting, errorHappened } = this.state;\n    return (\n      <div className=\"AuthPage\">\n        {!emailSentSuccessfully &&\n          !waiting && (\n            <div className=\"Auth__form-controls\">\n              <h1> Reset your password </h1>\n              {errorHappened && (\n                <div className=\"Auth__error-text\">\n                  {' '}\n                  Failed to send password reset email{' '}\n                </div>\n              )}\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  type=\"email\"\n                  value={this.state.email}\n                  placeholder=\"Email\"\n                  onChange={this.handleEmailChange}\n                />\n                <input\n                  type=\"submit\"\n                  className=\"Auth__submit\"\n                  value=\"Send Reset Email\"\n                />\n              </form>\n            </div>\n          )}\n        {waiting && (\n          <FontAwesome\n            name=\"spinner\"\n            size=\"4x\"\n            className=\"Auth__waiting fa-spin\"\n          />\n        )}\n        {emailSentSuccessfully && (\n          <div className=\"Auth__form-controls\">\n            <h1> Email Sent! </h1>\n            <p>You have 30 minutes to reset your password before your email's link expires.</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ForgotPasswordPage;\n"]},"metadata":{},"sourceType":"module"}