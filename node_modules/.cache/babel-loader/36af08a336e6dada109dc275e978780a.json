{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/CommunityRemoveModal.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeCrossingFromCommunityMutation(\\n    $crossingId: Int!\\n    $communityId: Int!\\n  ) {\\n    removeCrossingFromCommunity(\\n      input: { crossingId: $crossingId, communityId: $communityId }\\n    ) {\\n      crossing {\\n        id\\n        communityIds\\n        communities {\\n          nodes {\\n            id\\n            name\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { logError } from 'services/logger';\nimport Modal from 'components/Shared/Modal';\nimport ModalErrorMessage from 'components/Shared/Modal/ModalErrorMessage';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\nimport addCrossingToCommunityFragment from 'components/Dashboard/CrossingListPage/queries/addCrossingToCommunityFragment';\n\nvar CommunityRemoveModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommunityRemoveModal, _Component);\n\n  function CommunityRemoveModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommunityRemoveModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommunityRemoveModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.removeCommunity = function (e) {\n      _this.props.removeCrossingFromCommunityMutation({\n        variables: {\n          crossingId: Number(_this.props.crossing.id),\n          communityId: Number(_this.props.community.id)\n        },\n        update: function update(store, _ref) {\n          var removeCrossingFromCommunity = _ref.data.removeCrossingFromCommunity;\n          var updatedCrossing = removeCrossingFromCommunity.crossing;\n          store.writeFragment({\n            id: 'Crossing:' + updatedCrossing.id,\n            fragment: addCrossingToCommunityFragment,\n            data: updatedCrossing\n          });\n        }\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this.props.onClose();\n\n        _this.props.onCommunityRemoved();\n      }).catch(function (err) {\n        logError(err);\n\n        _this.setState({\n          errorMessage: err.message\n        });\n      });\n    };\n\n    _this.state = {\n      errorMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(CommunityRemoveModal, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(err) {\n      logError(err);\n      this.setState({\n        errorMessage: err.message\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        title: \"Remove Community\",\n        isOpen: true,\n        onClose: this.props.onClose,\n        footer: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(ButtonPrimary, {\n          className: \"CommunityRemoveModal__primary-button\",\n          onClick: this.removeCommunity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Remove\"), React.createElement(ButtonSecondary, {\n          onClick: this.props.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Cancel\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"This will remove the crossing from \", this.props.community.name, \".\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Do you want to continue?\"), this.state.errorMessage && React.createElement(ModalErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.errorMessage));\n    }\n  }]);\n\n  return CommunityRemoveModal;\n}(Component);\n\nCommunityRemoveModal.propTypes = {\n  crossing: PropTypes.object.isRequired,\n  community: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nvar removeCrossingFromCommunityMutation = gql(_templateObject());\nexport default graphql(removeCrossingFromCommunityMutation, {\n  name: 'removeCrossingFromCommunityMutation'\n})(CommunityRemoveModal);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/CommunityRemoveModal.js"],"names":["graphql","gql","React","Component","PropTypes","logError","Modal","ModalErrorMessage","ButtonPrimary","ButtonSecondary","addCrossingToCommunityFragment","CommunityRemoveModal","args","removeCommunity","e","props","removeCrossingFromCommunityMutation","variables","crossingId","Number","crossing","id","communityId","community","update","store","removeCrossingFromCommunity","data","updatedCrossing","writeFragment","fragment","then","onClose","onCommunityRemoved","catch","err","setState","errorMessage","message","state","name","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { logError } from 'services/logger';\n\nimport Modal from 'components/Shared/Modal';\nimport ModalErrorMessage from 'components/Shared/Modal/ModalErrorMessage';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\n\nimport addCrossingToCommunityFragment from 'components/Dashboard/CrossingListPage/queries/addCrossingToCommunityFragment';\n\nclass CommunityRemoveModal extends Component {\n  static propTypes = {\n    crossing: PropTypes.object.isRequired,\n    community: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      errorMessage: null,\n    };\n  }\n\n  componentDidCatch(err) {\n    logError(err);\n    this.setState({ errorMessage: err.message });\n  }\n\n  removeCommunity = e => {\n    this.props\n      .removeCrossingFromCommunityMutation({\n        variables: {\n          crossingId: Number(this.props.crossing.id),\n          communityId: Number(this.props.community.id),\n        },\n        update: (store, { data: { removeCrossingFromCommunity } }) => {\n          const updatedCrossing = removeCrossingFromCommunity.crossing;\n          store.writeFragment({\n            id: 'Crossing:' + updatedCrossing.id,\n            fragment: addCrossingToCommunityFragment,\n            data: updatedCrossing,\n          });\n        },\n      })\n      .then(({ data }) => {\n        this.props.onClose();\n        this.props.onCommunityRemoved();\n      })\n      .catch(err => {\n        logError(err);\n        this.setState({ errorMessage: err.message });\n      });\n  };\n\n  render() {\n    return (\n      <Modal\n        title=\"Remove Community\"\n        isOpen\n        onClose={this.props.onClose}\n        footer={\n          <div>\n            <ButtonPrimary\n              className=\"CommunityRemoveModal__primary-button\"\n              onClick={this.removeCommunity}\n            >\n              Remove\n            </ButtonPrimary>\n            <ButtonSecondary onClick={this.props.onClose}>\n              Cancel\n            </ButtonSecondary>\n          </div>\n        }\n      >\n        <p>This will remove the crossing from {this.props.community.name}.</p>\n        <p>Do you want to continue?</p>\n        {this.state.errorMessage && (\n          <ModalErrorMessage>{this.state.errorMessage}</ModalErrorMessage>\n        )}\n      </Modal>\n    );\n  }\n}\n\nconst removeCrossingFromCommunityMutation = gql`\n  mutation removeCrossingFromCommunityMutation(\n    $crossingId: Int!\n    $communityId: Int!\n  ) {\n    removeCrossingFromCommunity(\n      input: { crossingId: $crossingId, communityId: $communityId }\n    ) {\n      crossing {\n        id\n        communityIds\n        communities {\n          nodes {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default graphql(removeCrossingFromCommunityMutation, {\n  name: 'removeCrossingFromCommunityMutation',\n})(CommunityRemoveModal);\n"]},"metadata":{},"sourceType":"module"}