{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/ManageUsersPage/EditUser.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query allCommunities {\\n    allCommunities {\\n      nodes {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport 'components/Dashboard/ManageUsersPage/EditUser.css';\nimport EditUserControl from 'components/Dashboard/ManageUsersPage/EditUserControl';\nimport EditUserCommunityControl from 'components/Dashboard/ManageUsersPage/EditUserCommunityControl';\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nvar EditUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditUser, _Component);\n\n  function EditUser(props) {\n    var _this;\n\n    _classCallCheck(this, EditUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditUser).call(this, props));\n\n    _this.emailChanged = function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    };\n\n    _this.firstNameChanged = function (e) {\n      _this.setState({\n        firstName: e.target.value\n      });\n    };\n\n    _this.lastNameChanged = function (e) {\n      _this.setState({\n        lastName: e.target.value\n      });\n    };\n\n    _this.roleChanged = function (e) {\n      _this.setState({\n        role: e.target.value\n      });\n    };\n\n    _this.toggleNewCommunity = function (e) {\n      _this.setState({\n        newCommunity: JSON.parse(e.target.value)\n      });\n    };\n\n    _this.communityIdChanged = function (e) {\n      _this.setState({\n        communityId: e.target.value\n      });\n    };\n\n    _this.newCommunityNameChanged = function (e) {\n      _this.setState({\n        newCommunityName: e.target.value\n      });\n    };\n\n    _this.jobTitleChanged = function (e) {\n      _this.setState({\n        jobTitle: e.target.value\n      });\n    };\n\n    _this.phoneNumberChanged = function (e) {\n      _this.setState({\n        phoneNumber: e.target.value\n      });\n    };\n\n    _this.submitUser = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          role = _this$state.role,\n          newCommunity = _this$state.newCommunity,\n          communityId = _this$state.communityId,\n          newCommunityName = _this$state.newCommunityName,\n          jobTitle = _this$state.jobTitle,\n          phoneNumber = _this$state.phoneNumber;\n      var onSubmit,\n          params = {\n        email: email,\n        firstName: firstName,\n        lastName: lastName,\n        role: role,\n        jobTitle: jobTitle,\n        phoneNumber: phoneNumber\n      };\n\n      if (newCommunity) {\n        onSubmit = _this.props.addUserWithNewCommunity;\n        params.communityName = newCommunityName;\n      } else {\n        onSubmit = _this.props.onSubmit;\n        params.communityId = communityId;\n      }\n\n      onSubmit(params);\n    };\n\n    var userToEdit = props.userToEdit;\n\n    if (userToEdit) {\n      _this.state = {\n        newUser: false,\n        newCommunity: false,\n        email: userToEdit.emailAddress,\n        firstName: userToEdit.firstName,\n        lastName: userToEdit.lastName,\n        jobTitle: userToEdit.jobTitle,\n        phoneNumber: userToEdit.phoneNumber,\n        communityId: userToEdit.communityId\n      };\n    } else {\n      _this.state = {\n        newUser: true,\n        newCommunity: false,\n        newCommunityName: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        role: 'floods_community_editor',\n        communityId: props.currentUser.role === 'floods_super_admin' ? '9001' : props.currentUser.communityId,\n        jobTitle: '',\n        phoneNumber: ''\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(EditUser, [{\n    key: \"render\",\n    value: function render() {\n      var isLoading = !this.props.data || this.props.data.loading;\n\n      if (isLoading) {\n        return 'Loading';\n      }\n\n      var communities = this.props.data.allCommunities.nodes;\n\n      if (this.state.newUser) {\n        communities = communities.filter(function (node) {\n          return node.id !== 1337 && node.id !== 9002;\n        });\n      }\n\n      var onCancel = this.props.onCancel;\n      var _this$state2 = this.state,\n          newUser = _this$state2.newUser,\n          email = _this$state2.email,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          role = _this$state2.role,\n          newCommunity = _this$state2.newCommunity,\n          communityId = _this$state2.communityId,\n          newCommunityName = _this$state2.newCommunityName,\n          jobTitle = _this$state2.jobTitle,\n          phoneNumber = _this$state2.phoneNumber;\n      var readyToSubmit = firstName && lastName && email && (!newCommunity || newCommunity && newCommunityName);\n      return React.createElement(\"div\", {\n        className: \"EditUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(EditUserControl, {\n        label: \"Email\",\n        isRequired: newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"EditUser__control-text-box\",\n        type: \"email\",\n        autoComplete: \"new-password\",\n        value: email,\n        onChange: this.emailChanged,\n        disabled: !newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"EditUser__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(EditUserControl, {\n        label: \"First name\",\n        isRequired: newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"EditUser__control-text-box\",\n        type: \"text\",\n        autoComplete: \"new-password\",\n        value: firstName,\n        onChange: this.firstNameChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(EditUserControl, {\n        label: \"Last name\",\n        isRequired: newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"EditUser__control-text-box\",\n        type: \"text\",\n        autoComplete: \"new-password\",\n        value: lastName,\n        onChange: this.lastNameChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))), this.props.currentUser.role === 'floods_super_admin' && newUser && React.createElement(EditUserControl, {\n        label: \"Select a role\",\n        isRequired: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EditUser__control-radio-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"floods_community_editor\",\n        checked: role === 'floods_community_editor',\n        onChange: this.roleChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), \"Contributor | Update, edit, and add crossings in their communities\")), React.createElement(\"div\", {\n        className: \"EditUser__control-radio-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"floods_community_admin\",\n        checked: role === 'floods_community_admin',\n        onChange: this.roleChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), \"Admin | Update, edit, and add crossings in their communities, and add and delete users in their communities\")), React.createElement(\"div\", {\n        className: \"EditUser__control-radio-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"floods_super_admin\",\n        checked: role === 'floods_super_admin',\n        onChange: this.roleChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), \"Owner | Take all actions in all communities\")))), this.props.currentUser.role === 'floods_super_admin' && React.createElement(EditUserControl, {\n        label: \"Community\",\n        isRequired: newUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(EditUserCommunityControl, {\n        newCommunity: newCommunity,\n        newUser: newUser,\n        communities: communities,\n        communityId: communityId,\n        newCommunityName: newCommunityName,\n        toggleNewCommunity: this.toggleNewCommunity,\n        communityIdChanged: this.communityIdChanged,\n        newCommunityNameChanged: this.newCommunityNameChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(EditUserControl, {\n        label: \"Job Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"EditUser__control-text-box\",\n        type: \"text\",\n        value: jobTitle,\n        onChange: this.jobTitleChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(EditUserControl, {\n        label: \"Phone (visible to other Dashboard users)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"EditUser__control-text-box\",\n        type: \"text\",\n        value: phoneNumber,\n        onChange: this.phoneNumberChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"EditUser__buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(ButtonSecondary, {\n        className: \"EditUser__cancel-button\",\n        onClick: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(ButtonPrimary, {\n        className: \"EditUser__next-button\",\n        onClick: this.submitUser,\n        disabled: !readyToSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }]);\n\n  return EditUser;\n}(Component);\n\nvar allCommunities = gql(_templateObject());\nexport default graphql(allCommunities)(EditUser);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/ManageUsersPage/EditUser.js"],"names":["React","Component","EditUserControl","EditUserCommunityControl","ButtonSecondary","ButtonPrimary","graphql","gql","EditUser","props","emailChanged","e","setState","email","target","value","firstNameChanged","firstName","lastNameChanged","lastName","roleChanged","role","toggleNewCommunity","newCommunity","JSON","parse","communityIdChanged","communityId","newCommunityNameChanged","newCommunityName","jobTitleChanged","jobTitle","phoneNumberChanged","phoneNumber","submitUser","state","onSubmit","params","addUserWithNewCommunity","communityName","userToEdit","newUser","emailAddress","currentUser","isLoading","data","loading","communities","allCommunities","nodes","filter","node","id","onCancel","readyToSubmit"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mDAAP;AACA,OAAOC,eAAP,MAA4B,sDAA5B;AACA,OAAOC,wBAAP,MAAqC,+DAArC;AAEA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAgCnBC,YAhCmB,GAgCJ,UAAAC,CAAC,EAAI;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACD,KAlCkB;;AAAA,UAoCnBC,gBApCmB,GAoCA,UAAAL,CAAC,EAAI;AACtB,YAAKC,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEN,CAAC,CAACG,MAAF,CAASC;AAAtB,OAAd;AACD,KAtCkB;;AAAA,UAwCnBG,eAxCmB,GAwCD,UAAAP,CAAC,EAAI;AACrB,YAAKC,QAAL,CAAc;AAAEO,QAAAA,QAAQ,EAAER,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACD,KA1CkB;;AAAA,UA4CnBK,WA5CmB,GA4CL,UAAAT,CAAC,EAAI;AACjB,YAAKC,QAAL,CAAc;AAAES,QAAAA,IAAI,EAAEV,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KA9CkB;;AAAA,UAgDnBO,kBAhDmB,GAgDE,UAAAX,CAAC,EAAI;AACxB,YAAKC,QAAL,CAAc;AAAEW,QAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWd,CAAC,CAACG,MAAF,CAASC,KAApB;AAAhB,OAAd;AACD,KAlDkB;;AAAA,UAoDnBW,kBApDmB,GAoDE,UAAAf,CAAC,EAAI;AACxB,YAAKC,QAAL,CAAc;AAAEe,QAAAA,WAAW,EAAEhB,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACD,KAtDkB;;AAAA,UAwDnBa,uBAxDmB,GAwDO,UAAAjB,CAAC,EAAI;AAC7B,YAAKC,QAAL,CAAc;AAAEiB,QAAAA,gBAAgB,EAAElB,CAAC,CAACG,MAAF,CAASC;AAA7B,OAAd;AACD,KA1DkB;;AAAA,UA4DnBe,eA5DmB,GA4DD,UAAAnB,CAAC,EAAI;AACrB,YAAKC,QAAL,CAAc;AAAEmB,QAAAA,QAAQ,EAAEpB,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACD,KA9DkB;;AAAA,UAgEnBiB,kBAhEmB,GAgEE,UAAArB,CAAC,EAAI;AACxB,YAAKC,QAAL,CAAc;AAAEqB,QAAAA,WAAW,EAAEtB,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACD,KAlEkB;;AAAA,UAoEnBmB,UApEmB,GAoEN,YAAM;AAAA,wBAWb,MAAKC,KAXQ;AAAA,UAEftB,KAFe,eAEfA,KAFe;AAAA,UAGfI,SAHe,eAGfA,SAHe;AAAA,UAIfE,QAJe,eAIfA,QAJe;AAAA,UAKfE,IALe,eAKfA,IALe;AAAA,UAMfE,YANe,eAMfA,YANe;AAAA,UAOfI,WAPe,eAOfA,WAPe;AAAA,UAQfE,gBARe,eAQfA,gBARe;AAAA,UASfE,QATe,eASfA,QATe;AAAA,UAUfE,WAVe,eAUfA,WAVe;AAajB,UAAIG,QAAJ;AAAA,UAAcC,MAAM,GAAG;AACrBxB,QAAAA,KAAK,EAAEA,KADc;AAErBI,QAAAA,SAAS,EAAEA,SAFU;AAGrBE,QAAAA,QAAQ,EAAEA,QAHW;AAIrBE,QAAAA,IAAI,EAAEA,IAJe;AAKrBU,QAAAA,QAAQ,EAAEA,QALW;AAMrBE,QAAAA,WAAW,EAAEA;AANQ,OAAvB;;AASA,UAAIV,YAAJ,EAAkB;AAChBa,QAAAA,QAAQ,GAAG,MAAK3B,KAAL,CAAW6B,uBAAtB;AACAD,QAAAA,MAAM,CAACE,aAAP,GAAuBV,gBAAvB;AACD,OAHD,MAGO;AACLO,QAAAA,QAAQ,GAAG,MAAK3B,KAAL,CAAW2B,QAAtB;AACAC,QAAAA,MAAM,CAACV,WAAP,GAAqBA,WAArB;AACD;;AAEDS,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACD,KAnGkB;;AAAA,QAGTG,UAHS,GAGM/B,KAHN,CAGT+B,UAHS;;AAKjB,QAAIA,UAAJ,EAAgB;AACd,YAAKL,KAAL,GAAa;AACXM,QAAAA,OAAO,EAAE,KADE;AAEXlB,QAAAA,YAAY,EAAE,KAFH;AAGXV,QAAAA,KAAK,EAAE2B,UAAU,CAACE,YAHP;AAIXzB,QAAAA,SAAS,EAAEuB,UAAU,CAACvB,SAJX;AAKXE,QAAAA,QAAQ,EAAEqB,UAAU,CAACrB,QALV;AAMXY,QAAAA,QAAQ,EAAES,UAAU,CAACT,QANV;AAOXE,QAAAA,WAAW,EAAEO,UAAU,CAACP,WAPb;AAQXN,QAAAA,WAAW,EAAEa,UAAU,CAACb;AARb,OAAb;AAUD,KAXD,MAWO;AACL,YAAKQ,KAAL,GAAa;AACXM,QAAAA,OAAO,EAAE,IADE;AAEXlB,QAAAA,YAAY,EAAE,KAFH;AAGXM,QAAAA,gBAAgB,EAAE,EAHP;AAIXhB,QAAAA,KAAK,EAAE,EAJI;AAKXI,QAAAA,SAAS,EAAE,EALA;AAMXE,QAAAA,QAAQ,EAAE,EANC;AAOXE,QAAAA,IAAI,EAAE,yBAPK;AAQXM,QAAAA,WAAW,EAAGlB,KAAK,CAACkC,WAAN,CAAkBtB,IAAlB,KAA2B,oBAA3B,GAAkD,MAAlD,GAA2DZ,KAAK,CAACkC,WAAN,CAAkBhB,WARhF;AASXI,QAAAA,QAAQ,EAAE,EATC;AAUXE,QAAAA,WAAW,EAAE;AAVF,OAAb;AAYD;;AA7BgB;AA8BlB;;;;6BAuEQ;AACP,UAAMW,SAAS,GAAG,CAAC,KAAKnC,KAAL,CAAWoC,IAAZ,IAAoB,KAAKpC,KAAL,CAAWoC,IAAX,CAAgBC,OAAtD;;AACA,UAAIF,SAAJ,EAAe;AACb,eAAO,SAAP;AACD;;AAED,UAAIG,WAAW,GAAG,KAAKtC,KAAL,CAAWoC,IAAX,CAAgBG,cAAhB,CAA+BC,KAAjD;;AAEA,UAAI,KAAKd,KAAL,CAAWM,OAAf,EAAwB;AACtBM,QAAAA,WAAW,GAAGA,WAAW,CAACG,MAAZ,CAAmB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,EAAL,KAAY,IAAZ,IAAoBD,IAAI,CAACC,EAAL,KAAY,IAApC;AAAA,SAAvB,CAAd;AACD;;AAVM,UAYCC,QAZD,GAYc,KAAK5C,KAZnB,CAYC4C,QAZD;AAAA,yBAwBH,KAAKlB,KAxBF;AAAA,UAcLM,OAdK,gBAcLA,OAdK;AAAA,UAeL5B,KAfK,gBAeLA,KAfK;AAAA,UAgBLI,SAhBK,gBAgBLA,SAhBK;AAAA,UAiBLE,QAjBK,gBAiBLA,QAjBK;AAAA,UAkBLE,IAlBK,gBAkBLA,IAlBK;AAAA,UAmBLE,YAnBK,gBAmBLA,YAnBK;AAAA,UAoBLI,WApBK,gBAoBLA,WApBK;AAAA,UAqBLE,gBArBK,gBAqBLA,gBArBK;AAAA,UAsBLE,QAtBK,gBAsBLA,QAtBK;AAAA,UAuBLE,WAvBK,gBAuBLA,WAvBK;AAyBP,UAAMqB,aAAa,GAAGrC,SAAS,IAAIE,QAAb,IAAyBN,KAAzB,KAAmC,CAACU,YAAD,IAAkBA,YAAY,IAAIM,gBAArE,CAAtB;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,OAAvB;AAA+B,QAAA,UAAU,EAAEY,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,YAAY,EAAC,cAHf;AAIE,QAAA,KAAK,EAAE5B,KAJT;AAKE,QAAA,QAAQ,EAAE,KAAKH,YALjB;AAME,QAAA,QAAQ,EAAE,CAAC+B,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAWE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,YAAvB;AAAoC,QAAA,UAAU,EAAEA,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAC,cAHf;AAIE,QAAA,KAAK,EAAExB,SAJT;AAKE,QAAA,QAAQ,EAAE,KAAKD,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAUE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,WAAvB;AAAmC,QAAA,UAAU,EAAEyB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAC,cAHf;AAIE,QAAA,KAAK,EAAEtB,QAJT;AAKE,QAAA,QAAQ,EAAE,KAAKD,eALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CAXF,EA+BG,KAAKT,KAAL,CAAWkC,WAAX,CAAuBtB,IAAvB,KAAgC,oBAAhC,IACCoB,OADD,IAEG,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,eAAvB;AAAuC,QAAA,UAAU,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,yBAFR;AAGE,QAAA,OAAO,EAAEpB,IAAI,KAAK,yBAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKD,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,uEADF,CADF,EAaE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,wBAFR;AAGE,QAAA,OAAO,EAAEC,IAAI,KAAK,wBAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKD,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gHADF,CAbF,EAyBE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAC,oBAFR;AAGE,QAAA,OAAO,EAAEC,IAAI,KAAK,oBAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKD,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gDADF,CAzBF,CADF,CAjCN,EAyEG,KAAKX,KAAL,CAAWkC,WAAX,CAAuBtB,IAAvB,KAAgC,oBAAhC,IACC,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,WAAvB;AAAmC,QAAA,UAAU,EAAEoB,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,wBAAD;AACE,QAAA,YAAY,EAAElB,YADhB;AAEE,QAAA,OAAO,EAAEkB,OAFX;AAGE,QAAA,WAAW,EAAEM,WAHf;AAIE,QAAA,WAAW,EAAEpB,WAJf;AAKE,QAAA,gBAAgB,EAAEE,gBALpB;AAME,QAAA,kBAAkB,EAAE,KAAKP,kBAN3B;AAOE,QAAA,kBAAkB,EAAE,KAAKI,kBAP3B;AAQE,QAAA,uBAAuB,EAAE,KAAKE,uBARhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1EJ,EAuFE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEG,QAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAvFF,EA+FE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAC,0CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEG,WAHT;AAIE,QAAA,QAAQ,EAAE,KAAKD,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA/FF,EAuGE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,OAAO,EAAEqB,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,OAAO,EAAE,KAAKnB,UAFhB;AAGE,QAAA,QAAQ,EAAE,CAACoB,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAvGF,CADF;AAyHD;;;;EA1PoBrD,S;;AA6PvB,IAAM+C,cAAc,GAAGzC,GAAH,mBAApB;AAWA,eAAeD,OAAO,CAAC0C,cAAD,CAAP,CAAwBxC,QAAxB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'components/Dashboard/ManageUsersPage/EditUser.css';\nimport EditUserControl from 'components/Dashboard/ManageUsersPage/EditUserControl';\nimport EditUserCommunityControl from 'components/Dashboard/ManageUsersPage/EditUserCommunityControl';\n\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nclass EditUser extends Component {\n  constructor(props) {\n    super(props);\n\n    const { userToEdit } = props;\n\n    if (userToEdit) {\n      this.state = {\n        newUser: false,\n        newCommunity: false,\n        email: userToEdit.emailAddress,\n        firstName: userToEdit.firstName,\n        lastName: userToEdit.lastName,\n        jobTitle: userToEdit.jobTitle,\n        phoneNumber: userToEdit.phoneNumber,\n        communityId: userToEdit.communityId,\n      };\n    } else {\n      this.state = {\n        newUser: true,\n        newCommunity: false,\n        newCommunityName: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        role: 'floods_community_editor',\n        communityId: (props.currentUser.role === 'floods_super_admin' ? '9001' : props.currentUser.communityId),\n        jobTitle: '',\n        phoneNumber: '',\n      };\n    }\n  }\n\n  emailChanged = e => {\n    this.setState({ email: e.target.value });\n  };\n\n  firstNameChanged = e => {\n    this.setState({ firstName: e.target.value });\n  };\n\n  lastNameChanged = e => {\n    this.setState({ lastName: e.target.value });\n  };\n\n  roleChanged = e => {\n    this.setState({ role: e.target.value });\n  };\n\n  toggleNewCommunity = e => {\n    this.setState({ newCommunity: JSON.parse(e.target.value) });\n  };\n\n  communityIdChanged = e => {\n    this.setState({ communityId: e.target.value });\n  };\n\n  newCommunityNameChanged = e => {\n    this.setState({ newCommunityName: e.target.value });\n  }\n\n  jobTitleChanged = e => {\n    this.setState({ jobTitle: e.target.value });\n  };\n\n  phoneNumberChanged = e => {\n    this.setState({ phoneNumber: e.target.value });\n  };\n\n  submitUser = () => {\n    const {\n      email,\n      firstName,\n      lastName,\n      role,\n      newCommunity,\n      communityId,\n      newCommunityName,\n      jobTitle,\n      phoneNumber,\n    } = this.state;\n\n    let onSubmit, params = {\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n      role: role,\n      jobTitle: jobTitle,\n      phoneNumber: phoneNumber\n    }\n\n    if (newCommunity) {\n      onSubmit = this.props.addUserWithNewCommunity;\n      params.communityName = newCommunityName;\n    } else {\n      onSubmit = this.props.onSubmit;\n      params.communityId = communityId;\n    }\n\n    onSubmit(params);\n  };\n\n  render() {\n    const isLoading = !this.props.data || this.props.data.loading;\n    if (isLoading) {\n      return 'Loading';\n    }\n\n    let communities = this.props.data.allCommunities.nodes\n\n    if (this.state.newUser) {\n      communities = communities.filter(node => node.id !== 1337 && node.id !== 9002);\n    }\n\n    const { onCancel } = this.props;\n    const {\n      newUser,\n      email,\n      firstName,\n      lastName,\n      role,\n      newCommunity,\n      communityId,\n      newCommunityName,\n      jobTitle,\n      phoneNumber,\n    } = this.state;\n    const readyToSubmit = firstName && lastName && email && (!newCommunity || (newCommunity && newCommunityName));\n\n    return (\n      <div className=\"EditUser\">\n        <EditUserControl label=\"Email\" isRequired={newUser}>\n          <input\n            className=\"EditUser__control-text-box\"\n            type=\"email\"\n            autoComplete=\"new-password\"\n            value={email}\n            onChange={this.emailChanged}\n            disabled={!newUser}\n          />\n        </EditUserControl>\n        <div className=\"EditUser__name\">\n          <EditUserControl label=\"First name\" isRequired={newUser}>\n            <input\n              className=\"EditUser__control-text-box\"\n              type=\"text\"\n              autoComplete=\"new-password\"\n              value={firstName}\n              onChange={this.firstNameChanged}\n            />\n          </EditUserControl>\n          <EditUserControl label=\"Last name\" isRequired={newUser}>\n            <input\n              className=\"EditUser__control-text-box\"\n              type=\"text\"\n              autoComplete=\"new-password\"\n              value={lastName}\n              onChange={this.lastNameChanged}\n            />\n          </EditUserControl>\n        </div>\n        {this.props.currentUser.role === 'floods_super_admin' &&\n          newUser && (\n            <EditUserControl label=\"Select a role\" isRequired>\n              <form>\n                <div className=\"EditUser__control-radio-button\">\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"floods_community_editor\"\n                      checked={role === 'floods_community_editor'}\n                      onChange={this.roleChanged}\n                    />\n                    Contributor | Update, edit, and add crossings in their\n                    communities\n                  </label>\n                </div>\n                <div className=\"EditUser__control-radio-button\">\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"floods_community_admin\"\n                      checked={role === 'floods_community_admin'}\n                      onChange={this.roleChanged}\n                    />\n                    Admin | Update, edit, and add crossings in their\n                    communities, and add and delete users in their communities\n                  </label>\n                </div>\n                <div className=\"EditUser__control-radio-button\">\n                  <label>\n                    <input\n                      type=\"radio\"\n                      value=\"floods_super_admin\"\n                      checked={role === 'floods_super_admin'}\n                      onChange={this.roleChanged}\n                    />\n                    Owner | Take all actions in all communities\n                  </label>\n                </div>\n              </form>\n            </EditUserControl>\n          )}\n        {this.props.currentUser.role === 'floods_super_admin' && (\n          <EditUserControl label=\"Community\" isRequired={newUser}>\n            <EditUserCommunityControl\n              newCommunity={newCommunity}\n              newUser={newUser}\n              communities={communities}\n              communityId={communityId}\n              newCommunityName={newCommunityName}\n              toggleNewCommunity={this.toggleNewCommunity}\n              communityIdChanged={this.communityIdChanged}\n              newCommunityNameChanged={this.newCommunityNameChanged}\n            />\n          </EditUserControl>\n        )}\n        <EditUserControl label=\"Job Title\">\n          <input\n            className=\"EditUser__control-text-box\"\n            type=\"text\"\n            value={jobTitle}\n            onChange={this.jobTitleChanged}\n          />\n        </EditUserControl>\n        <EditUserControl label=\"Phone (visible to other Dashboard users)\">\n          <input\n            className=\"EditUser__control-text-box\"\n            type=\"text\"\n            value={phoneNumber}\n            onChange={this.phoneNumberChanged}\n          />\n        </EditUserControl>\n        <div className=\"EditUser__buttons\">\n          <ButtonSecondary\n            className=\"EditUser__cancel-button\"\n            onClick={onCancel}\n          >\n            Cancel\n          </ButtonSecondary>\n          <ButtonPrimary\n            className=\"EditUser__next-button\"\n            onClick={this.submitUser}\n            disabled={!readyToSubmit}\n          >\n            Next\n          </ButtonPrimary>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst allCommunities = gql`\n  query allCommunities {\n    allCommunities {\n      nodes {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport default graphql(allCommunities)(EditUser);\n"]},"metadata":{},"sourceType":"module"}