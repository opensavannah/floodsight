{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/DeleteCrossingButton.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteCrossingMutation($crossingId: Int!) {\\n    removeCrossing(input: { crossingId: $crossingId }) {\\n      crossing {\\n        id\\n        active\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\nimport { logError } from 'services/logger';\nimport Modal from 'components/Shared/Modal';\nimport ModalErrorMessage from 'components/Shared/Modal/ModalErrorMessage';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\nimport deleteCrossingFragment from 'components/Dashboard/CrossingListPage/queries/deleteCrossingFragment';\nimport './DeleteCrossingButton.css';\n\nvar DeleteCrossingButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteCrossingButton, _Component);\n\n  function DeleteCrossingButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeleteCrossingButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeleteCrossingButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.showDeleteModal = function () {\n      _this.setState({\n        isModalOpen: true,\n        errorMessage: null\n      });\n    };\n\n    _this.closeDeleteModal = function () {\n      _this.setState({\n        isModalOpen: false,\n        errorMessage: null\n      });\n    };\n\n    _this.deleteCrossing = function () {\n      _this.setState({\n        errorMessage: null\n      });\n\n      _this.props.deleteCrossingMutation({\n        variables: {\n          crossingId: Number(_this.props.crossingId)\n        },\n        update: function update(store, _ref) {\n          var removeCrossing = _ref.data.removeCrossing;\n          var deletedCrossing = removeCrossing.crossing;\n          store.writeFragment({\n            id: 'Crossing:' + deletedCrossing.id,\n            fragment: deleteCrossingFragment,\n            data: deletedCrossing\n          });\n        }\n      }).then(function () {\n        // FIXME: <DeleteCrossingButton> is unmounted before this is run\n        _this.setState({\n          isModalOpen: false\n        });\n      }).catch(function (err) {\n        logError(err);\n\n        _this.setState({\n          errorMessage: err.message\n        });\n      });\n    };\n\n    _this.state = {\n      isModalOpen: false,\n      errorMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(DeleteCrossingButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ButtonSecondary, {\n        onClick: this.showDeleteModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Delete Crossing\"), React.createElement(Modal, {\n        title: \"Delete Crossing\",\n        isOpen: this.state.isModalOpen,\n        onClose: this.closeDeleteModal,\n        footer: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(ButtonPrimary, {\n          className: \"ConfirmDeleteCrossingModal__delete-button\",\n          onClick: this.deleteCrossing,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Delete\"), React.createElement(ButtonSecondary, {\n          onClick: this.closeDeleteModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Cancel\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"The historical data for this crossing will be saved, but you will no longer be able to view or change the change this crossing\\u2019s status.\"), React.createElement(ModalErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.errorMessage))));\n    }\n  }]);\n\n  return DeleteCrossingButton;\n}(Component);\n\nvar deleteCrossingMutation = gql(_templateObject());\nexport default graphql(deleteCrossingMutation, {\n  name: 'deleteCrossingMutation'\n})(DeleteCrossingButton);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingDetailPage/DeleteCrossingButton.js"],"names":["React","Component","gql","graphql","logError","Modal","ModalErrorMessage","ButtonPrimary","ButtonSecondary","deleteCrossingFragment","DeleteCrossingButton","args","showDeleteModal","setState","isModalOpen","errorMessage","closeDeleteModal","deleteCrossing","props","deleteCrossingMutation","variables","crossingId","Number","update","store","removeCrossing","data","deletedCrossing","crossing","writeFragment","id","fragment","then","catch","err","message","state","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql } from 'react-apollo';\n\nimport { logError } from 'services/logger';\nimport Modal from 'components/Shared/Modal';\nimport ModalErrorMessage from 'components/Shared/Modal/ModalErrorMessage';\nimport ButtonPrimary from 'components/Shared/Button/ButtonPrimary';\nimport ButtonSecondary from 'components/Shared/Button/ButtonSecondary';\n\nimport deleteCrossingFragment from 'components/Dashboard/CrossingListPage/queries/deleteCrossingFragment';\n\nimport './DeleteCrossingButton.css';\n\nclass DeleteCrossingButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = {\n      isModalOpen: false,\n      errorMessage: null,\n    };\n  }\n\n  showDeleteModal = () => {\n    this.setState({ isModalOpen: true, errorMessage: null });\n  };\n\n  closeDeleteModal = () => {\n    this.setState({ isModalOpen: false, errorMessage: null });\n  };\n\n  deleteCrossing = () => {\n    this.setState({ errorMessage: null });\n    this.props\n      .deleteCrossingMutation({\n        variables: {\n          crossingId: Number(this.props.crossingId),\n        },\n        update: (store, { data: { removeCrossing } }) => {\n          const deletedCrossing = removeCrossing.crossing;\n          store.writeFragment({\n            id: 'Crossing:' + deletedCrossing.id,\n            fragment: deleteCrossingFragment,\n            data: deletedCrossing,\n          });\n        },\n      })\n      .then(() => {\n        // FIXME: <DeleteCrossingButton> is unmounted before this is run\n        this.setState({ isModalOpen: false });\n      })\n      .catch(err => {\n        logError(err);\n        this.setState({ errorMessage: err.message });\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <ButtonSecondary\n          onClick={this.showDeleteModal}\n        >\n          Delete Crossing\n        </ButtonSecondary>\n        <Modal\n          title=\"Delete Crossing\"\n          isOpen={this.state.isModalOpen}\n          onClose={this.closeDeleteModal}\n          footer={\n            <div>\n              <ButtonPrimary\n                className=\"ConfirmDeleteCrossingModal__delete-button\"\n                onClick={this.deleteCrossing}\n              >\n                Delete\n              </ButtonPrimary>\n              <ButtonSecondary onClick={this.closeDeleteModal}>\n                Cancel\n              </ButtonSecondary>\n            </div>\n          }\n        >\n          <div className=\"\">\n            <p>\n              The historical data for this crossing will be saved, but you will\n              no longer be able to view or change the change this crossing’s\n              status.\n            </p>\n            <ModalErrorMessage>{this.state.errorMessage}</ModalErrorMessage>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst deleteCrossingMutation = gql`\n  mutation deleteCrossingMutation($crossingId: Int!) {\n    removeCrossing(input: { crossingId: $crossingId }) {\n      crossing {\n        id\n        active\n      }\n    }\n  }\n`;\n\nexport default graphql(deleteCrossingMutation, {\n  name: 'deleteCrossingMutation',\n})(DeleteCrossingButton);\n"]},"metadata":{},"sourceType":"module"}