{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Shared/CrossingMapPage/CrossingMapPageContainer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    allCommunities {\\n      nodes {\\n        ...communityInfo\\n      }\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport CrossingMapPage from 'components/Shared/CrossingMapPage/CrossingMapPage';\nimport allCrossings from 'components/Shared/Map/queries/allCrossingsQuery';\nimport allCamerasQuery from 'components/Shared/Map/queries/allCamerasQuery';\nimport communityFragment from 'components/Shared/Map/queries/communityFragment';\nimport * as selectors from 'components/Shared/CrossingMapPage/selectors';\n\nvar CrossingMapPageContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CrossingMapPageContainer, _Component);\n\n  function CrossingMapPageContainer() {\n    _classCallCheck(this, CrossingMapPageContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CrossingMapPageContainer).apply(this, arguments));\n  }\n\n  _createClass(CrossingMapPageContainer, [{\n    key: \"render\",\n    value: function render() {\n      var isDataLoaded = selectors.isDataLoaded(this.props);\n      return React.createElement(CrossingMapPage, Object.assign({}, this.props, {\n        isDataLoaded: isDataLoaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CrossingMapPageContainer;\n}(Component);\n\nvar allCommunities = gql(_templateObject(), communityFragment);\nexport default compose(graphql(allCrossings, {\n  name: 'openCrossings',\n  options: function options(ownProps) {\n    return {\n      variables: {\n        search: '%%',\n        showOpen: true,\n        showClosed: false,\n        showCaution: false,\n        showLongterm: false,\n        communityId: ownProps.currentUser && ownProps.currentUser.role !== 'floods_super_admin' ? ownProps.currentUser.communityId : ownProps.selectedCommunityId\n      }\n    };\n  }\n}), graphql(allCrossings, {\n  name: 'closedCrossings',\n  options: function options(ownProps) {\n    return {\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: true,\n        showCaution: false,\n        showLongterm: false,\n        communityId: ownProps.currentUser && ownProps.currentUser.role !== 'floods_super_admin' ? ownProps.currentUser.communityId : ownProps.selectedCommunityId\n      }\n    };\n  }\n}), graphql(allCrossings, {\n  name: 'cautionCrossings',\n  options: function options(ownProps) {\n    return {\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: false,\n        showCaution: true,\n        showLongterm: false,\n        communityId: ownProps.currentUser && ownProps.currentUser.role !== 'floods_super_admin' ? ownProps.currentUser.communityId : ownProps.selectedCommunityId\n      }\n    };\n  }\n}), graphql(allCrossings, {\n  name: 'longtermCrossings',\n  options: function options(ownProps) {\n    return {\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: false,\n        showCaution: false,\n        showLongterm: true,\n        communityId: ownProps.currentUser && ownProps.currentUser.role !== 'floods_super_admin' ? ownProps.currentUser.communityId : ownProps.selectedCommunityId\n      }\n    };\n  }\n}), graphql(allCommunities, {\n  name: 'allCommunities'\n}), graphql(allCamerasQuery, {\n  name: 'allCameras'\n}))(CrossingMapPageContainer);","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/CrossingMapPage/CrossingMapPageContainer.js"],"names":["React","Component","graphql","compose","gql","CrossingMapPage","allCrossings","allCamerasQuery","communityFragment","selectors","CrossingMapPageContainer","isDataLoaded","props","allCommunities","name","options","ownProps","variables","search","showOpen","showClosed","showCaution","showLongterm","communityId","currentUser","role","selectedCommunityId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport CrossingMapPage from 'components/Shared/CrossingMapPage/CrossingMapPage';\nimport allCrossings from 'components/Shared/Map/queries/allCrossingsQuery';\nimport allCamerasQuery from 'components/Shared/Map/queries/allCamerasQuery';\nimport communityFragment from 'components/Shared/Map/queries/communityFragment';\nimport * as selectors from 'components/Shared/CrossingMapPage/selectors';\n\nclass CrossingMapPageContainer extends Component {\n  render(){\n    const isDataLoaded = selectors.isDataLoaded(this.props);\n    return <CrossingMapPage\n      {...this.props}\n      isDataLoaded={isDataLoaded}\n    />\n  }\n}\n\nconst allCommunities = gql`\n  {\n    allCommunities {\n      nodes {\n        ...communityInfo\n      }\n    }\n  }\n  ${communityFragment}\n`;\n\nexport default compose(\n  graphql(allCrossings, {\n    name: 'openCrossings',\n    options: ownProps => ({\n      variables: {\n        search: '%%',\n        showOpen: true,\n        showClosed: false,\n        showCaution: false,\n        showLongterm: false,\n        communityId:\n          ownProps.currentUser &&\n          ownProps.currentUser.role !== 'floods_super_admin'\n            ? ownProps.currentUser.communityId\n            : ownProps.selectedCommunityId,\n      },\n    }),\n  }),\n  graphql(allCrossings, {\n    name: 'closedCrossings',\n    options: ownProps => ({\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: true,\n        showCaution: false,\n        showLongterm: false,\n        communityId:\n          ownProps.currentUser &&\n          ownProps.currentUser.role !== 'floods_super_admin'\n            ? ownProps.currentUser.communityId\n            : ownProps.selectedCommunityId,\n      },\n    }),\n  }),\n  graphql(allCrossings, {\n    name: 'cautionCrossings',\n    options: ownProps => ({\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: false,\n        showCaution: true,\n        showLongterm: false,\n        communityId:\n          ownProps.currentUser &&\n          ownProps.currentUser.role !== 'floods_super_admin'\n            ? ownProps.currentUser.communityId\n            : ownProps.selectedCommunityId,\n      },\n    }),\n  }),\n  graphql(allCrossings, {\n    name: 'longtermCrossings',\n    options: ownProps => ({\n      variables: {\n        search: '%%',\n        showOpen: false,\n        showClosed: false,\n        showCaution: false,\n        showLongterm: true,\n        communityId:\n          ownProps.currentUser &&\n          ownProps.currentUser.role !== 'floods_super_admin'\n            ? ownProps.currentUser.communityId\n            : ownProps.selectedCommunityId,\n      },\n    }),\n  }),\n  graphql(allCommunities, {\n    name: 'allCommunities',\n  }),\n  graphql(allCamerasQuery, {\n    name: 'allCameras'\n  })\n)(CrossingMapPageContainer);\n"]},"metadata":{},"sourceType":"module"}