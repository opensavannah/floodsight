{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query allCrossings(\\n    $search: String\\n    $communityId: Int\\n    $showOpen: Boolean\\n    $showClosed: Boolean\\n    $showCaution: Boolean\\n    $showLongterm: Boolean\\n  ) {\\n    searchCrossings(\\n      search: $search\\n      communityId: $communityId\\n      showOpen: $showOpen\\n      showClosed: $showClosed\\n      showCaution: $showCaution\\n      showLongterm: $showLongterm\\n    ) {\\n      nodes {\\n        id\\n        name\\n        geojson\\n        latestStatusId\\n        latestStatusCreatedAt\\n        communityIds\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\n/**\n  $communityId must be explicitly added in order for DashboardCrossingListItme.updateMap() to not throw errors.\n  updateMap() reruns all searchCrossings queries from store.data.data with this query.\n**/\n\nvar allCrossings = gql(_templateObject());\nexport default allCrossings;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/Map/queries/allCrossingsQuery.js"],"names":["gql","allCrossings"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA;;;;;AAIA,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;AA6BA,eAAeC,YAAf","sourcesContent":["import gql from 'graphql-tag';\n\n/**\n  $communityId must be explicitly added in order for DashboardCrossingListItme.updateMap() to not throw errors.\n  updateMap() reruns all searchCrossings queries from store.data.data with this query.\n**/\nconst allCrossings = gql`\n  query allCrossings(\n    $search: String\n    $communityId: Int\n    $showOpen: Boolean\n    $showClosed: Boolean\n    $showCaution: Boolean\n    $showLongterm: Boolean\n  ) {\n    searchCrossings(\n      search: $search\n      communityId: $communityId\n      showOpen: $showOpen\n      showClosed: $showClosed\n      showCaution: $showCaution\n      showLongterm: $showLongterm\n    ) {\n      nodes {\n        id\n        name\n        geojson\n        latestStatusId\n        latestStatusCreatedAt\n        communityIds\n      }\n    }\n  }\n`;\n\nexport default allCrossings;\n"]},"metadata":{},"sourceType":"module"}