{"ast":null,"code":"import _objectWithoutProperties from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Shared/Modal/index.js\";\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport classNames from 'classnames';\nimport './Modal.css';\n\ntry {\n  ReactModal.setAppElement('#root');\n} catch (err) {// Ignore error from #root not existing when running tests\n}\n\nexport default function Modal(_ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      footer = _ref.footer,\n      onClose = _ref.onClose,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"title\", \"children\", \"footer\", \"onClose\", \"className\"]);\n\n  return React.createElement(ReactModal, Object.assign({\n    contentLabel: title,\n    onRequestClose: onClose,\n    className: classNames('FloodsModalDialog', className),\n    overlayClassName: \"FloodsModalOverlay\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"FloodsModal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, title && React.createElement(\"div\", {\n    className: \"FloodsModalHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"FloodsModalHeader__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"FloodsModalHeader__close\",\n    role: \"button\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FontAwesome, {\n    name: \"times-circle\",\n    ariaLabel: \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"FloodsModalContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, children), footer && React.createElement(\"div\", {\n    className: \"FloodsModalFooter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, footer)));\n}\nModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  footer: PropTypes.node\n};","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Shared/Modal/index.js"],"names":["React","ReactModal","PropTypes","FontAwesome","classNames","setAppElement","err","Modal","title","children","footer","onClose","className","props","propTypes","string","isRequired","isOpen","bool","func","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,aAAP;;AAEA,IAAI;AACFH,EAAAA,UAAU,CAACI,aAAX,CAAyB,OAAzB;AACD,CAFD,CAEE,OAAOC,GAAP,EAAY,CACZ;AACD;;AAED,eAAe,SAASC,KAAT,OAOZ;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,QAKC,QALDA,QAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,SAEC,QAFDA,SAEC;AAAA,MADEC,KACF;;AACD,SACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEL,KADhB;AAEE,IAAA,cAAc,EAAEG,OAFlB;AAGE,IAAA,SAAS,EAAEP,UAAU,CAAC,mBAAD,EAAsBQ,SAAtB,CAHvB;AAIE,IAAA,gBAAgB,EAAC;AAJnB,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IACJ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CA,KAA3C,CADF,EAEE;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEG,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAiC,IAAA,SAAS,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CAFJ,EAaE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCF,QAArC,CAbF,EAcGC,MAAM,IAAI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCA,MAApC,CAdb,CAPF,CADF;AA0BD;AAEDH,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,KAAK,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UADR;AAEhBC,EAAAA,MAAM,EAAEf,SAAS,CAACgB,IAAV,CAAeF,UAFP;AAGhBL,EAAAA,OAAO,EAAET,SAAS,CAACiB,IAAV,CAAeH,UAHR;AAIhBP,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IAAV,CAAeJ,UAJT;AAKhBN,EAAAA,MAAM,EAAER,SAAS,CAACkB;AALF,CAAlB","sourcesContent":["import React from 'react';\nimport ReactModal from 'react-modal';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport classNames from 'classnames';\n\nimport './Modal.css';\n\ntry {\n  ReactModal.setAppElement('#root');\n} catch (err) {\n  // Ignore error from #root not existing when running tests\n}\n\nexport default function Modal({\n  title,\n  children,\n  footer,\n  onClose,\n  className,\n  ...props\n}) {\n  return (\n    <ReactModal\n      contentLabel={title}\n      onRequestClose={onClose}\n      className={classNames('FloodsModalDialog', className)}\n      overlayClassName=\"FloodsModalOverlay\"\n      {...props}\n    >\n      <div className=\"FloodsModal\">\n        {title && (\n          <div className=\"FloodsModalHeader\">\n            <div className=\"FloodsModalHeader__title\">{title}</div>\n            <div\n              className=\"FloodsModalHeader__close\"\n              role=\"button\"\n              onClick={onClose}\n            >\n              <FontAwesome name=\"times-circle\" ariaLabel=\"Close\" />\n            </div>\n          </div>\n        )}\n        <div className=\"FloodsModalContent\">{children}</div>\n        {footer && <div className=\"FloodsModalFooter\">{footer}</div>}\n      </div>\n    </ReactModal>\n  );\n}\n\nModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  footer: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}