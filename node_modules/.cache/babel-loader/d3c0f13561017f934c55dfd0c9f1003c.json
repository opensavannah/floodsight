{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingStatusHistory/CrossingStatusHistoryItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { displayedInputs } from 'constants/StatusConstants';\nimport StatusIcon from 'components/Shared/StatusIcon';\nimport 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.css';\nimport Date from 'components/Shared/DateTime/Date';\nimport Hour from 'components/Shared/DateTime/Hour';\n\nvar ReasonDurationNotes = function ReasonDurationNotes(_ref) {\n  var shouldDisplayReason = _ref.shouldDisplayReason,\n      shouldDisplayDuration = _ref.shouldDisplayDuration,\n      shouldDisplayNotes = _ref.shouldDisplayNotes,\n      reason = _ref.reason,\n      reopenDate = _ref.reopenDate,\n      indefiniteClosure = _ref.indefiniteClosure,\n      notes = _ref.notes,\n      smallSize = _ref.smallSize;\n  return React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__reason-duration-notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__reason-duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, shouldDisplayReason && React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__reason\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"CrossingStatusHistoryItem__subdetails-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Reason\"), React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__subdetails-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, reason)), shouldDisplayDuration && React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__duration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"CrossingStatusHistoryItem__subdetails-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Duration\"), React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__subdetails-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, indefiniteClosure ? \"Closed Indefinitely\" : \"Expected to Reopen \".concat(reopenDate))), shouldDisplayNotes && smallSize && React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"CrossingStatusHistoryItem__subdetails-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__subdetails-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, notes))), shouldDisplayNotes && !smallSize && React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"CrossingStatusHistoryItem__subdetails-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    className: \"CrossingStatusHistoryItem__subdetails-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, notes)));\n};\n\nvar CrossingStatusHistoryItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CrossingStatusHistoryItem, _Component);\n\n  function CrossingStatusHistoryItem() {\n    _classCallCheck(this, CrossingStatusHistoryItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CrossingStatusHistoryItem).apply(this, arguments));\n  }\n\n  _createClass(CrossingStatusHistoryItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          update = _this$props.update,\n          showNames = _this$props.showNames,\n          measure = _this$props.measure,\n          cqParams = _this$props.cqParams;\n      var userFirstName = update.userFirstName,\n          userLastName = update.userLastName,\n          statusId = update.statusId,\n          statusName = update.statusName,\n          statusReasonName = update.statusReasonName,\n          reopenDate = update.reopenDate,\n          indefiniteClosure = update.indefiniteClosure,\n          createdAt = update.createdAt,\n          crossingId = update.crossingId,\n          crossingName = update.crossingName,\n          notes = update.notes;\n      var shouldDisplay = displayedInputs[statusId];\n      return React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, showNames && React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__crossing-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/dashboard/crossing/\".concat(crossingId),\n        className: \"PublicCrossingListItem__crossing-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, crossingName)), React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(StatusIcon, {\n        statusId: statusId,\n        onLoad: measure,\n        alt: shouldDisplay.status,\n        className: \"CrossingStatusHistoryItem__status-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__details-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__status-and-author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"CrossingStatusHistoryItem__subdetails-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, statusName), React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"by \"), React.createElement(\"span\", {\n        className: \"CrossingStatusHistoryItem__author-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, userFirstName.substring(0, 1) + '. ' + userLastName))), cqParams.fullsize && React.createElement(ReasonDurationNotes, {\n        shouldDisplayReason: shouldDisplay.reason,\n        shouldDisplayDuration: shouldDisplay.duration,\n        shouldDisplayNotes: shouldDisplay.notes,\n        reason: statusReasonName,\n        reopenDate: reopenDate,\n        indefiniteClosure: indefiniteClosure,\n        notes: notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classnames({\n          smallsize: cqParams.smallsize\n        }, 'CrossingStatusHistoryItem__datetime'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__datetime-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Date, {\n        date: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__datetime-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Hour, {\n        date: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })))), cqParams.smallsize && React.createElement(\"div\", {\n        className: \"CrossingStatusHistoryItem__details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ReasonDurationNotes, {\n        smallSize: true,\n        shouldDisplayReason: shouldDisplay.reason,\n        shouldDisplayDuration: shouldDisplay.duration,\n        shouldDisplayNotes: shouldDisplay.notes,\n        reason: statusReasonName,\n        reopenDate: reopenDate,\n        notes: notes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CrossingStatusHistoryItem;\n}(Component);\n\nCrossingStatusHistoryItem.propTypes = {\n  showNames: PropTypes.bool\n};\nCrossingStatusHistoryItem.defaultProps = {\n  showNames: false\n};\nexport default CrossingStatusHistoryItem;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Dashboard/CrossingStatusHistory/CrossingStatusHistoryItem.js"],"names":["React","Component","PropTypes","classnames","displayedInputs","StatusIcon","Date","Hour","ReasonDurationNotes","shouldDisplayReason","shouldDisplayDuration","shouldDisplayNotes","reason","reopenDate","indefiniteClosure","notes","smallSize","CrossingStatusHistoryItem","props","update","showNames","measure","cqParams","userFirstName","userLastName","statusId","statusName","statusReasonName","createdAt","crossingId","crossingName","shouldDisplay","status","substring","fullsize","duration","smallsize","propTypes","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { displayedInputs } from 'constants/StatusConstants';\nimport StatusIcon from 'components/Shared/StatusIcon';\nimport 'components/Dashboard/CrossingStatusHistory/CrossingStatusHistory.css';\nimport Date from 'components/Shared/DateTime/Date';\nimport Hour from 'components/Shared/DateTime/Hour';\n\nconst ReasonDurationNotes = ({\n  shouldDisplayReason,\n  shouldDisplayDuration,\n  shouldDisplayNotes,\n  reason,\n  reopenDate,\n  indefiniteClosure,\n  notes,\n  smallSize,\n}) => (\n  <div className=\"CrossingStatusHistoryItem__reason-duration-notes\">\n    <div className=\"CrossingStatusHistoryItem__reason-duration\">\n      {shouldDisplayReason && (\n        <div className=\"CrossingStatusHistoryItem__reason\">\n          <span className=\"CrossingStatusHistoryItem__subdetails-title\">\n            Reason\n          </span>\n          <div className=\"CrossingStatusHistoryItem__subdetails-content\">\n            {reason}\n          </div>\n        </div>\n      )}\n      {shouldDisplayDuration && (\n        <div className=\"CrossingStatusHistoryItem__duration\">\n          <span className=\"CrossingStatusHistoryItem__subdetails-title\">\n            Duration\n          </span>\n          <div className=\"CrossingStatusHistoryItem__subdetails-content\">\n            {(indefiniteClosure) ?\n            (\"Closed Indefinitely\") :\n            (`Expected to Reopen ${reopenDate}`)}\n          </div>\n        </div>\n      )}\n      {shouldDisplayNotes &&\n        smallSize && (\n          <div className=\"CrossingStatusHistoryItem__notes\">\n            <span className=\"CrossingStatusHistoryItem__subdetails-title\">\n              Notes\n            </span>\n            <div className=\"CrossingStatusHistoryItem__subdetails-content\">\n              {notes}\n            </div>\n          </div>\n        )}\n    </div>\n    {shouldDisplayNotes &&\n      !smallSize && (\n        <div className=\"CrossingStatusHistoryItem__notes\">\n          <span className=\"CrossingStatusHistoryItem__subdetails-title\">\n            Notes\n          </span>\n          <div className=\"CrossingStatusHistoryItem__subdetails-content\">\n            {notes}\n          </div>\n        </div>\n      )}\n  </div>\n);\n\nclass CrossingStatusHistoryItem extends Component {\n  static propTypes = {\n    showNames: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showNames: false,\n  };\n\n  render() {\n    const { update, showNames, measure, cqParams } = this.props;\n    const {\n      userFirstName,\n      userLastName,\n      statusId,\n      statusName,\n      statusReasonName,\n      reopenDate,\n      indefiniteClosure,\n      createdAt,\n      crossingId,\n      crossingName,\n      notes\n    } = update;\n    const shouldDisplay = displayedInputs[statusId];\n\n    return (\n      <div className=\"CrossingStatusHistoryItem\">\n        {showNames && (\n          <div className=\"CrossingStatusHistoryItem__crossing-name\">\n            <a\n              href={`/dashboard/crossing/${crossingId}`}\n              className=\"PublicCrossingListItem__crossing-name\"\n            >\n              {crossingName}\n            </a>\n          </div>\n        )}\n        <div className=\"CrossingStatusHistoryItem__status\">\n          <div>\n            <StatusIcon\n              statusId={statusId}\n              onLoad={measure}\n              alt={shouldDisplay.status}\n              className=\"CrossingStatusHistoryItem__status-icon\"\n            />\n          </div>\n          <div className=\"CrossingStatusHistoryItem__details-container\">\n            <div className=\"CrossingStatusHistoryItem__details\">\n              <div className=\"CrossingStatusHistoryItem__status-and-author\">\n                <span className=\"CrossingStatusHistoryItem__subdetails-title\">\n                  {statusName}\n                </span>\n                <div className=\"CrossingStatusHistoryItem__author\">\n                  <span>by </span>\n                  <span className=\"CrossingStatusHistoryItem__author-name\">\n                    {userFirstName.substring(0, 1) + '. ' + userLastName}\n                  </span>\n                </div>\n              </div>\n              {cqParams.fullsize && (\n                <ReasonDurationNotes\n                  shouldDisplayReason={shouldDisplay.reason}\n                  shouldDisplayDuration={shouldDisplay.duration}\n                  shouldDisplayNotes={shouldDisplay.notes}\n                  reason={statusReasonName}\n                  reopenDate={reopenDate}\n                  indefiniteClosure={indefiniteClosure}\n                  notes={notes}\n                />\n              )}\n              <div\n                className={classnames(\n                  { smallsize: cqParams.smallsize },\n                  'CrossingStatusHistoryItem__datetime',\n                )}\n              >\n                <div className=\"CrossingStatusHistoryItem__datetime-date\">\n                  <Date date={createdAt} />\n                </div>\n                <div className=\"CrossingStatusHistoryItem__datetime-time\">\n                  <Hour date={createdAt} />\n                </div>\n              </div>\n            </div>\n            {cqParams.smallsize && (\n              <div className=\"CrossingStatusHistoryItem__details\">\n                <ReasonDurationNotes\n                  smallSize={true}\n                  shouldDisplayReason={shouldDisplay.reason}\n                  shouldDisplayDuration={shouldDisplay.duration}\n                  shouldDisplayNotes={shouldDisplay.notes}\n                  reason={statusReasonName}\n                  reopenDate={reopenDate}\n                  notes={notes}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CrossingStatusHistoryItem;\n"]},"metadata":{},"sourceType":"module"}