{"ast":null,"code":"import _classCallCheck from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlvlewis/floodsight/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlvlewis/floodsight/src/components/Public/CrossingListItem/PublicCrossingListItem.js\";\nimport React from 'react';\nimport { ContainerQuery } from 'react-container-query';\nimport classnames from 'classnames';\nimport CrossingCommunityList from 'components/Shared/CrossingListItem/CrossingCommunityList';\nimport Location from 'components/Shared/CrossingListItem/Location';\nimport DetailsItem from 'components/Public/CrossingListItem/DetailsItem';\nimport StatusIcon from 'components/Shared/StatusIcon';\nimport StatusName from 'components/Shared/StatusName';\nimport Date from 'components/Shared/DateTime/Date';\nimport Hour from 'components/Shared/DateTime/Hour';\nimport * as statusConstants from 'constants/StatusConstants';\nimport { LARGE_ITEM_MIN_WIDTH } from 'constants/containerQueryConstants';\nimport 'components/Public/CrossingListItem/PublicCrossingListItem.css';\nvar containerQuery = {\n  'PublicCrossingListItem--lg': {\n    minWidth: LARGE_ITEM_MIN_WIDTH\n  }\n};\n\nvar PublicCrossingListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PublicCrossingListItem, _React$Component);\n\n  function PublicCrossingListItem() {\n    _classCallCheck(this, PublicCrossingListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PublicCrossingListItem).apply(this, arguments));\n  }\n\n  _createClass(PublicCrossingListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          crossing = _this$props.crossing,\n          allCommunities = _this$props.allCommunities,\n          reasons = _this$props.reasons,\n          onDash = _this$props.onDash;\n      var _crossing$statusUpdat = crossing.statusUpdateByLatestStatusUpdateId,\n          createdAt = _crossing$statusUpdat.createdAt,\n          reopenDate = _crossing$statusUpdat.reopenDate,\n          indefiniteClosure = _crossing$statusUpdat.indefiniteClosure;\n      var show = [];\n\n      switch (crossing.latestStatusId) {\n        case statusConstants.OPEN:\n          show = [];\n          break;\n\n        case statusConstants.CAUTION:\n        case statusConstants.CLOSED:\n          show = ['reason', 'notes'];\n          break;\n\n        case statusConstants.LONGTERM:\n          show = ['reason', 'duration', 'notes'];\n          break;\n\n        default:\n          break;\n      }\n\n      var CrossingListItemJSX = React.createElement(\"div\", {\n        className: \"PublicCrossingListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__status-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(StatusIcon, {\n        statusId: crossing.latestStatusId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__status-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(StatusName, {\n        statusId: crossing.latestStatusId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__crossing-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, crossing.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Location, {\n        crossing: crossing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(CrossingCommunityList, {\n        crossing: crossing,\n        allCommunities: allCommunities,\n        onDash: onDash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__datetime-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Date, {\n        date: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Hour, {\n        date: createdAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"PublicCrossingListItem__details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, show.includes('reason') && React.createElement(DetailsItem, {\n        title: \"Reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, reasons.find(function (r) {\n        return r.id === crossing.statusUpdateByLatestStatusUpdateId.statusReasonId;\n      }).name), show.includes('duration') && React.createElement(DetailsItem, {\n        title: \"Duration\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, indefiniteClosure ? \"Closed Indefinitely\" : \"Expected to Reopen \".concat(reopenDate)), show.includes('notes') && React.createElement(DetailsItem, {\n        title: \"Notes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, crossing.statusUpdateByLatestStatusUpdateId.notes), crossing.statusUpdateByLatestStatusUpdateId.image && React.createElement(\"img\", {\n        alt: \"\",\n        style: {\n          width: '300px'\n        },\n        src: \"data:image/png;base64, \".concat(crossing.statusUpdateByLatestStatusUpdateId.image),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n\n      if (!this.props.cqClassName) {\n        return React.createElement(ContainerQuery, {\n          query: containerQuery,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, function (params) {\n          return React.createElement(\"div\", {\n            className: classnames(params),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, CrossingListItemJSX);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classnames(this.props.cqClassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, CrossingListItemJSX);\n    }\n  }]);\n\n  return PublicCrossingListItem;\n}(React.Component);\n\nexport default PublicCrossingListItem;","map":{"version":3,"sources":["/Users/carlvlewis/floodsight/src/components/Public/CrossingListItem/PublicCrossingListItem.js"],"names":["React","ContainerQuery","classnames","CrossingCommunityList","Location","DetailsItem","StatusIcon","StatusName","Date","Hour","statusConstants","LARGE_ITEM_MIN_WIDTH","containerQuery","minWidth","PublicCrossingListItem","props","crossing","allCommunities","reasons","onDash","statusUpdateByLatestStatusUpdateId","createdAt","reopenDate","indefiniteClosure","show","latestStatusId","OPEN","CAUTION","CLOSED","LONGTERM","CrossingListItemJSX","name","includes","find","r","id","statusReasonId","notes","image","width","cqClassName","params","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ContainerQuery } from 'react-container-query';\nimport classnames from 'classnames';\n\nimport CrossingCommunityList from 'components/Shared/CrossingListItem/CrossingCommunityList';\nimport Location from 'components/Shared/CrossingListItem/Location';\nimport DetailsItem from 'components/Public/CrossingListItem/DetailsItem';\nimport StatusIcon from 'components/Shared/StatusIcon';\nimport StatusName from 'components/Shared/StatusName';\nimport Date from 'components/Shared/DateTime/Date';\nimport Hour from 'components/Shared/DateTime/Hour';\nimport * as statusConstants from 'constants/StatusConstants';\nimport { LARGE_ITEM_MIN_WIDTH } from 'constants/containerQueryConstants';\n\nimport 'components/Public/CrossingListItem/PublicCrossingListItem.css';\n\nconst containerQuery = {\n  'PublicCrossingListItem--lg': {\n    minWidth: LARGE_ITEM_MIN_WIDTH,\n  },\n};\n\nclass PublicCrossingListItem extends React.Component {\n  render() {\n    const { crossing, allCommunities, reasons, onDash } = this.props;\n    const { createdAt, reopenDate, indefiniteClosure } = crossing.statusUpdateByLatestStatusUpdateId;\n\n    var show = [];\n    switch (crossing.latestStatusId) {\n      case statusConstants.OPEN:\n        show = [];\n        break;\n      case statusConstants.CAUTION:\n      case statusConstants.CLOSED:\n        show = ['reason', 'notes'];\n        break;\n      case statusConstants.LONGTERM:\n        show = ['reason', 'duration', 'notes'];\n        break;\n      default:\n        break;\n    }\n\n    const CrossingListItemJSX = (\n      <div className=\"PublicCrossingListItem\">\n        <div className=\"PublicCrossingListItem__overview\">\n          <div className=\"PublicCrossingListItem__status-icon\">\n            <StatusIcon statusId={crossing.latestStatusId} />\n          </div>\n          <div className=\"PublicCrossingListItem__info\">\n            <div className=\"PublicCrossingListItem__status-name\">\n              <StatusName statusId={crossing.latestStatusId} />\n            </div>\n            <div className=\"PublicCrossingListItem__crossing-name\">\n              {crossing.name}\n            </div>\n            <div>\n              <Location crossing={crossing} />\n              <CrossingCommunityList\n                crossing={crossing}\n                allCommunities={allCommunities}\n                onDash={onDash}\n              />\n            </div>\n          </div>\n          <div className=\"PublicCrossingListItem__datetime\">\n            <div className=\"PublicCrossingListItem__datetime-date\">\n              <Date date={createdAt} />\n            </div>\n            <div>\n              <Hour date={createdAt} />\n            </div>\n          </div>\n        </div>\n        <div className=\"PublicCrossingListItem__details\">\n          {show.includes('reason') && (\n            <DetailsItem title=\"Reason\">\n              {\n                reasons.find(\n                  r =>\n                    r.id ===\n                    crossing.statusUpdateByLatestStatusUpdateId.statusReasonId,\n                ).name\n              }\n            </DetailsItem>\n          )}\n          {show.includes('duration') && (\n            <DetailsItem title=\"Duration\">\n              {(indefiniteClosure) ?\n              (\"Closed Indefinitely\") :\n              (`Expected to Reopen ${reopenDate}`)}\n            </DetailsItem>\n          )}\n          {show.includes('notes') && (\n            <DetailsItem title=\"Notes\">\n              {crossing.statusUpdateByLatestStatusUpdateId.notes}\n            </DetailsItem>\n          )}\n          {crossing.statusUpdateByLatestStatusUpdateId.image && (\n            <img\n              alt=\"\"\n              style={{ width: '300px' }}\n              src={`data:image/png;base64, ${\n                crossing.statusUpdateByLatestStatusUpdateId.image\n              }`}\n            />\n          )}\n        </div>\n      </div>\n    );\n\n    if (!this.props.cqClassName) {\n      return (\n        <ContainerQuery query={containerQuery}>\n          {params => (\n            <div className={classnames(params)}>{CrossingListItemJSX}</div>\n          )}\n        </ContainerQuery>\n      );\n    }\n\n    return (\n      <div className={classnames(this.props.cqClassName)}>\n        {CrossingListItemJSX}\n      </div>\n    );\n  }\n}\n\nexport default PublicCrossingListItem;\n"]},"metadata":{},"sourceType":"module"}