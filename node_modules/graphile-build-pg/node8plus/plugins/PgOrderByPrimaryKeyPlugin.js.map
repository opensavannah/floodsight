{"version":3,"sources":["../../src/plugins/PgOrderByPrimaryKeyPlugin.js"],"names":["PgOrderByPrimaryKeyPlugin","builder","hook","values","build","context","extend","pgIntrospectionResultsByKind","introspectionResultsByKind","scope","isPgRowSortEnum","pgIntrospection","table","kind","attributes","attribute","filter","attr","classId","id","primaryKeyConstraint","constraint","con","type","primaryKeys","keyAttributeNums","map","num","PRIMARY_KEY_ASC","value","alias","specs","key","name","unique","PRIMARY_KEY_DESC"],"mappings":";;;;;;kBAGgB,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;AAC1DA,UAAQC,IAAR,CAAa,wBAAb,EAAuC,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,KAA4B;AACjE,UAAM;AACJC,YADI;AAEJC,oCAA8BC;AAF1B,QAGFJ,KAHJ;AAIA,UAAM;AACJK,aAAO,EAAEC,eAAF,EAAmBC,iBAAiBC,KAApC;AADH,QAEFP,OAFJ;AAGA,QAAI,CAACK,eAAD,IAAoB,CAACE,KAArB,IAA8BA,MAAMC,IAAN,KAAe,OAAjD,EAA0D;AACxD,aAAOV,MAAP;AACD;AACD,UAAMW,aAAaN,2BAA2BO,SAA3B,CAAqCC,MAArC,CACjBC,QAAQA,KAAKC,OAAL,KAAiBN,MAAMO,EADd,CAAnB;AAGA,UAAMC,uBAAuBZ,2BAA2Ba,UAA3B,CAC1BL,MAD0B,CACnBM,OAAOA,IAAIJ,OAAJ,KAAgBN,MAAMO,EADV,EAE1BH,MAF0B,CAEnBM,OAAOA,IAAIC,IAAJ,KAAa,GAFD,EAEM,CAFN,CAA7B;AAGA,QAAI,CAACH,oBAAL,EAA2B;AACzB,aAAOjB,MAAP;AACD;AACD,UAAMqB,cACJJ,wBACAA,qBAAqBK,gBAArB,CAAsCC,GAAtC,CACEC,OAAOb,WAAWE,MAAX,CAAkBC,QAAQA,KAAKU,GAAL,KAAaA,GAAvC,EAA4C,CAA5C,CADT,CAFF;AAKA,WAAOrB,OACLH,MADK,EAEL;AACEyB,uBAAiB;AACfC,eAAO;AACLC,iBAAO,iBADF;AAELC,iBAAOP,YAAYE,GAAZ,CAAgBM,OAAO,CAACA,IAAIC,IAAL,EAAW,IAAX,CAAvB,CAFF;AAGLC,kBAAQ;AAHH;AADQ,OADnB;AAQEC,wBAAkB;AAChBN,eAAO;AACLC,iBAAO,kBADF;AAELC,iBAAOP,YAAYE,GAAZ,CAAgBM,OAAO,CAACA,IAAIC,IAAL,EAAW,KAAX,CAAvB,CAFF;AAGLC,kBAAQ;AAHH;AADS;AARpB,KAFK,EAkBJ,8CAA6CtB,MAAMqB,IAAK,GAlBpD,CAAP;AAoBD,GA7CD;AA8CD,C","file":"PgOrderByPrimaryKeyPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgOrderByPrimaryKeyPlugin(builder) {\n  builder.hook(\"GraphQLEnumType:values\", (values, build, context) => {\n    const {\n      extend,\n      pgIntrospectionResultsByKind: introspectionResultsByKind,\n    } = build;\n    const {\n      scope: { isPgRowSortEnum, pgIntrospection: table },\n    } = context;\n    if (!isPgRowSortEnum || !table || table.kind !== \"class\") {\n      return values;\n    }\n    const attributes = introspectionResultsByKind.attribute.filter(\n      attr => attr.classId === table.id\n    );\n    const primaryKeyConstraint = introspectionResultsByKind.constraint\n      .filter(con => con.classId === table.id)\n      .filter(con => con.type === \"p\")[0];\n    if (!primaryKeyConstraint) {\n      return values;\n    }\n    const primaryKeys =\n      primaryKeyConstraint &&\n      primaryKeyConstraint.keyAttributeNums.map(\n        num => attributes.filter(attr => attr.num === num)[0]\n      );\n    return extend(\n      values,\n      {\n        PRIMARY_KEY_ASC: {\n          value: {\n            alias: \"primary_key_asc\",\n            specs: primaryKeys.map(key => [key.name, true]),\n            unique: true,\n          },\n        },\n        PRIMARY_KEY_DESC: {\n          value: {\n            alias: \"primary_key_desc\",\n            specs: primaryKeys.map(key => [key.name, false]),\n            unique: true,\n          },\n        },\n      },\n      `Adding primary key asc/desc sort to table '${table.name}'`\n    );\n  });\n}: Plugin);\n"]}